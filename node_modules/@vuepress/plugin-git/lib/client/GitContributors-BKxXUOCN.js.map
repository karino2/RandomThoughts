{"version":3,"file":"GitContributors-BKxXUOCN.js","sources":["../../src/client/composables/useContributors.ts","../../src/client/components/GitContributors.ts"],"sourcesContent":["import type { ComputedRef, MaybeRefOrGetter } from 'vue'\nimport { computed, toValue } from 'vue'\nimport { useData } from 'vuepress/client'\nimport type {\n  GitContributorInfo,\n  GitPluginFrontmatter,\n  GitPluginPageData,\n} from '../../shared/index.js'\n\ndeclare const __GIT_CONTRIBUTORS__: boolean\n\n/**\n * Contributors composable\n *\n * 贡献者组合式函数\n *\n * @param enabled - Whether to enable contributors\n *\n * 是否启用贡献者\n *\n * @default true\n */\nexport const useContributors =\n  typeof __GIT_CONTRIBUTORS__ === 'boolean' && __GIT_CONTRIBUTORS__\n    ? (\n        enabled: MaybeRefOrGetter<boolean> = true,\n      ): ComputedRef<GitContributorInfo[]> => {\n        const { frontmatter, page } = useData<\n          GitPluginFrontmatter,\n          GitPluginPageData\n        >()\n\n        return computed(() => {\n          if (frontmatter.value.contributors === false || !toValue(enabled))\n            return []\n\n          return page.value.git.contributors ?? []\n        })\n      }\n    : (): ComputedRef<GitContributorInfo[]> => computed(() => [])\n","import type { FunctionalComponent } from 'vue'\nimport { defineComponent, h } from 'vue'\nimport type { GitContributorInfo } from '../../shared/index.js'\nimport { useContributors, useGitLocale } from '../composables/index.js'\nimport { VPHeader } from './VPHeader.js'\n\nimport '../styles/contributors.css'\n\nexport const GitContributor: FunctionalComponent<GitContributorInfo> = ({\n  name,\n  url,\n  avatar,\n}) =>\n  h(\n    url ? 'a' : 'span',\n    {\n      href: url,\n      target: '_blank',\n      rel: 'noreferrer',\n      class: 'vp-contributor',\n    },\n    [\n      avatar\n        ? h('img', { src: avatar, alt: '', class: 'vp-contributor-avatar' })\n        : null,\n      h('span', { class: 'vp-contributor-name' }, name),\n    ],\n  )\n\nexport const GitContributors = defineComponent({\n  name: 'GitContributors',\n\n  props: {\n    /** Contributor title */\n    title: String,\n\n    /** header level of contributor title */\n    headerLevel: {\n      type: Number,\n      default: 2,\n    },\n  },\n\n  setup(props) {\n    const contributors = useContributors()\n    const locale = useGitLocale()\n\n    return () =>\n      contributors.value.length\n        ? [\n            h(VPHeader, {\n              level: props.headerLevel,\n              anchor: 'doc-contributors',\n              text: props.title || locale.value.contributors,\n            }),\n            h(\n              'div',\n              { class: 'vp-contributors' },\n              contributors.value.map((item) => h(GitContributor, item)),\n            ),\n          ]\n        : null\n  },\n})\n"],"names":["useContributors","enabled","frontmatter","page","useData","computed","toValue","GitContributor","name","url","avatar","h","GitContributors","defineComponent","props","contributors","locale","useGitLocale","VPHeader","item"],"mappings":"sMAsBO,MAAMA,EACX,OAAO,sBAAyB,WAAa,qBACzC,CACEC,EAAqC,KACC,CACtC,KAAM,CAAE,YAAAC,EAAa,KAAAC,CAAK,EAAIC,IAK9B,OAAOC,EAAS,IACVH,EAAY,MAAM,eAAiB,IAAS,CAACI,EAAQL,CAAO,EACvD,CAAA,EAEFE,EAAK,MAAM,IAAI,cAAgB,CAAA,CACvC,CACH,EACA,IAAyCE,EAAS,IAAM,CAAA,CAAE,EC/BnDE,EAA0D,CAAC,CACtE,KAAAC,EACA,IAAAC,EACA,OAAAC,CACF,IACEC,EACEF,EAAM,IAAM,OACZ,CACE,KAAMA,EACN,OAAQ,SACR,IAAK,aACL,MAAO,gBACT,EACA,CACEC,EACIC,EAAE,MAAO,CAAE,IAAKD,EAAQ,IAAK,GAAI,MAAO,uBAAwB,CAAC,EACjE,KACJC,EAAE,OAAQ,CAAE,MAAO,qBAAsB,EAAGH,CAAI,CAClD,CACF,EAEWI,EAAkBC,EAAgB,CAC7C,KAAM,kBAEN,MAAO,CAEL,MAAO,OAGP,YAAa,CACX,KAAM,OACN,QAAS,CACX,CACF,EAEA,MAAMC,EAAO,CACX,MAAMC,EAAef,EAAAA,EACfgB,EAASC,IAEf,MAAO,IACLF,EAAa,MAAM,OACf,CACEJ,EAAEO,EAAU,CACV,MAAOJ,EAAM,YACb,OAAQ,mBACR,KAAMA,EAAM,OAASE,EAAO,MAAM,YACpC,CAAC,EACDL,EACE,MACA,CAAE,MAAO,iBAAkB,EAC3BI,EAAa,MAAM,IAAKI,GAASR,EAAEJ,EAAgBY,CAAI,CAAC,CAC1D,CACF,EACA,IACR,CACF,CAAC"}