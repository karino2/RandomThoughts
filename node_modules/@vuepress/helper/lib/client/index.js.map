{"version":3,"file":"index.js","sources":["../../src/client/components/LoadingIcon.ts","../../src/client/components/RenderDefault.ts","../../src/client/components/Transitions/FadeInExpandTransition.ts","../../src/client/utils/data.ts","../../src/client/utils/env.ts","../../src/client/utils/getDarkMode.ts","../../src/client/utils/getHeaders.ts","../../src/client/utils/isFocusingTextControl.ts","../../src/shared/helper.ts","../../src/shared/deepAssign.ts","../../src/shared/date.ts","../../src/shared/link.ts","../../src/client/utils/isSlotContentEmpty.ts","../../src/client/utils/isKeyMatched.ts","../../src/client/utils/hasGlobalComponent.ts","../../src/client/utils/message.ts","../../src/client/utils/wait.ts","../../src/client/composables/useDarkMode.ts","../../src/client/composables/useHeaders.ts","../../src/client/composables/useLocaleConfig.ts","../../src/client/composables/useKeys.ts","../../src/client/composables/useRoutePaths.ts"],"sourcesContent":["import type { FunctionalComponent, VNode } from 'vue'\nimport { h } from 'vue'\n\nconst getLength = (size: number | string): string =>\n  typeof size === 'number' ? `${size}px` : size\n\n/**\n * Loading icon\n *\n * 加载图标\n */\nexport const LoadingIcon: FunctionalComponent<{\n  size?: number\n  stroke?: number\n  wrapper?: boolean\n  height?: number | string\n}> = ({ size = 48, stroke = 4, wrapper = true, height = 2 * size }): VNode => {\n  const icon = h('span', {\n    style: `\\\n--loading-icon: url(\"data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='xMidYMid' viewBox='25 25 50 50'%3E%3CanimateTransform attributeName='transform' type='rotate' dur='2s' keyTimes='0;1' repeatCount='indefinite' values='0;360'%3E%3C/animateTransform%3E%3Ccircle cx='50' cy='50' r='20' fill='none' stroke='currentColor' stroke-width='${stroke}' stroke-linecap='round'%3E%3Canimate attributeName='stroke-dasharray' dur='1.5s' keyTimes='0;0.5;1' repeatCount='indefinite' values='1,200;90,200;1,200'%3E%3C/animate%3E%3Canimate attributeName='stroke-dashoffset' dur='1.5s' keyTimes='0;0.5;1' repeatCount='indefinite' values='0;-35px;-125px'%3E%3C/animate%3E%3C/circle%3E%3C/svg%3E\");\\\n--icon-size: ${getLength(size)};\\\ndisplay: inline-block;\\\nwidth: var(--icon-size);\\\nheight: var(--icon-size);\\\nbackground-color: currentcolor;\\\n-webkit-mask-image: var(--loading-icon);\\\nmask-image: var(--loading-icon)\\\n`,\n  })\n\n  return wrapper\n    ? h(\n        'div',\n        {\n          style: `\\\ndisplay: flex;\\\nalign-items: center;\\\njustify-content: center;\\\nheight: ${getLength(height)}\\\n`,\n        },\n        icon,\n      )\n    : icon\n}\n\nLoadingIcon.displayName = 'LoadingIcon'\n","import type { FunctionalComponent, VNode } from 'vue'\n\n/**\n * Render default slot content\n *\n * 渲染默认插槽内容\n */\nexport const RenderDefault: FunctionalComponent<\n  Record<never, never>,\n  Record<never, never>,\n  { default: () => VNode | VNode[] | null }\n> = (_props, { slots }) => slots.default()\n","import type { Component, PropType } from 'vue'\nimport { Transition, TransitionGroup, defineComponent, h } from 'vue'\n\nexport const FadeInExpandTransition = defineComponent({\n  name: 'FadeInExpandTransition',\n\n  props: {\n    /* Whether to group transitions */\n    group: Boolean,\n    appear: Boolean,\n    /* Whether to switch to the transition of `width` */\n    width: Boolean,\n    mode: String as PropType<'default' | 'in-out' | 'out-in'>,\n    onLeave: Function,\n    onAfterLeave: Function,\n    onAfterEnter: Function,\n  },\n\n  setup(props, { slots }) {\n    const handleBeforeLeave = (el: HTMLElement): void => {\n      el.style[props.width ? 'maxWidth' : 'maxHeight'] = `${el.offsetHeight}px`\n      void el.offsetWidth\n    }\n\n    const handleLeave = (el: HTMLElement): void => {\n      el.style[props.width ? 'maxWidth' : 'maxHeight'] = '0'\n      void el.offsetWidth\n      props.onLeave?.()\n    }\n\n    const handleAfterLeave = (el: HTMLElement): void => {\n      el.style[props.width ? 'maxWidth' : 'maxHeight'] = ''\n      props.onAfterLeave?.()\n    }\n\n    const handleEnter = (el: HTMLElement): void => {\n      el.style.transition = 'none'\n      if (props.width) {\n        const memorizedWidth = el.offsetWidth\n        el.style.maxWidth = '0'\n        void el.offsetWidth\n        el.style.transition = ''\n        el.style.maxWidth = `${memorizedWidth}px`\n      } else {\n        const memorizedHeight = el.offsetHeight\n        el.style.maxHeight = '0'\n        void el.offsetWidth\n        el.style.transition = ''\n        el.style.maxHeight = `${memorizedHeight}px`\n      }\n      void el.offsetWidth\n    }\n\n    const handleAfterEnter = (el: HTMLElement): void => {\n      el.style[props.width ? 'maxWidth' : 'maxHeight'] = ''\n      props.onAfterEnter?.()\n    }\n\n    return () =>\n      h(\n        (props.group ? TransitionGroup : Transition) as Component,\n        {\n          name: props.width ? 'fade-in-width-expand' : 'fade-in-height-expand',\n          appear: props.appear,\n          onEnter: handleEnter,\n          onAfterEnter: handleAfterEnter,\n          onBeforeLeave: handleBeforeLeave,\n          onLeave: handleLeave,\n          onAfterLeave: handleAfterLeave,\n          ...(props.group ? undefined : { mode: props.mode }),\n        },\n        slots,\n      )\n  },\n})\n","import type { DeflateOptions } from 'fflate'\nimport { strFromU8, strToU8, unzlibSync, zlibSync } from 'fflate/browser'\n\ndeclare const __VUEPRESS_SSR__: boolean\n\n/**\n * Encode and compress data\n *\n * 编码和压缩数据\n *\n * @param data - Data to encode / 要编码的数据\n * @param level - Compression level / 压缩级别\n *\n * @returns Base64 encoded compressed data / Base64 编码的压缩数据\n */\nexport const encodeData = (\n  data: string,\n  level: DeflateOptions['level'] = 6,\n): string => {\n  const buffer = strToU8(data)\n  // zlib headers can be found at https://stackoverflow.com/a/54915442\n  const zipped = zlibSync(buffer, { level })\n  const binary = strFromU8(zipped, true)\n\n  return __VUEPRESS_SSR__\n    ? Buffer.from(binary, 'binary').toString('base64')\n    : btoa(binary)\n}\n\n/**\n * Decode and unzip data\n *\n * 解码和解压数据\n *\n * @param base64 - Base64 encoded data / Base64 编码的数据\n *\n * @returns Decoded string / 解码后的字符串\n */\nexport const decodeData = (base64: string): string => {\n  const binary = __VUEPRESS_SSR__\n    ? Buffer.from(base64, 'base64').toString('binary')\n    : atob(base64)\n\n  return strFromU8(unzlibSync(strToU8(binary, true)))\n}\n","/**\n * Check if the user agent indicates a mobile device\n *\n * 检查用户代理是否表示移动设备\n *\n * @param ua - User agent string / 用户代理字符串\n *\n * @returns Whether it's a mobile device / 是否为移动设备\n */\nexport const isMobile = (ua: string): boolean =>\n  /\\b(?:Android|iPhone)/i.test(ua)\n\n/**\n * Check if the user agent indicates Chrome WebView\n *\n * 检查用户代理是否表示 Chrome WebView\n *\n * @param ua - User agent string / 用户代理字符串\n *\n * @returns Whether it's Chrome WebView / 是否为 Chrome WebView\n */\nexport const isChromeWebView = (ua: string): boolean =>\n  / wv\\).+(chrome)\\/([\\w.]+)/i.test(ua)\n\n/**\n * Check if the user agent indicates Safari Mobile\n *\n * 检查用户代理是否表示 Safari Mobile\n *\n * @param ua - User agent string / 用户代理字符串\n *\n * @returns Whether it's Safari Mobile / 是否为 Safari Mobile\n */\nexport const isSafariMobile = (ua: string): boolean =>\n  /version\\/([\\w.]+) .*mobile\\/\\w+ (safari)/i.test(ua)\n\n/**\n * Check if the user agent indicates Safari\n *\n * 检查用户代理是否表示 Safari\n *\n * @param ua - User agent string / 用户代理字符串\n *\n * @returns Whether it's Safari / 是否为 Safari\n */\nexport const isSafari = (ua: string): boolean =>\n  /version\\/([\\w.]+) .*(mobile ?safari|safari)/i.test(ua)\n\n/**\n * Check if the user agent indicates iPhone\n *\n * 检查用户代理是否表示 iPhone\n *\n * @param ua - User agent string / 用户代理字符串\n *\n * @returns Whether it's iPhone / 是否为 iPhone\n */\nexport const isiPhone = (ua: string): boolean =>\n  /\\((ip(?:hone|od)[\\w ]*);/i.test(ua)\n\n/**\n * Check if the user agent indicates iPad\n *\n * 检查用户代理是否表示 iPad\n *\n * @param ua - User agent string / 用户代理字符串\n *\n * @returns Whether it's iPad / 是否为 iPad\n */\nexport const isiPad = (ua: string): boolean =>\n  [\n    /\\((ipad);[-\\w),; ]+apple/i,\n    /applecoremedia\\/[\\w.]+ \\((ipad)/i,\n    /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i,\n  ].some((item) => item.test(ua))\n\n/**\n * Check if the user agent indicates Windows\n *\n * 检查用户代理是否表示 Windows\n *\n * @param ua - User agent string / 用户代理字符串\n *\n * @returns Whether it's Windows / 是否为 Windows\n */\nexport const isWindows = (ua: string): boolean =>\n  [\n    /microsoft (windows) (vista|xp)/i,\n    /(win(?=3|9|n)|win 9x )([nt\\d.]+)/i,\n    /(windows) nt 6\\.2; (arm)/i,\n    /(windows (?:phone(?: os)?|mobile))[/ ]?([\\d.\\w ]*)/i,\n    /(windows)[/ ]?([ntce\\d. ]+\\w)(?!.+xbox)/i,\n  ].some((item) => item.test(ua))\n\n/**\n * Check if the user agent indicates iOS\n *\n * 检查用户代理是否表示 iOS\n *\n * @param ua - User agent string / 用户代理字符串\n *\n * @returns Whether it's iOS / 是否为 iOS\n */\nexport const isIOS = (ua: string): boolean =>\n  [\n    /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,\n    /cfnetwork\\/.+darwin/i,\n  ].some((item) => item.test(ua))\n\n/**\n * Check if the user agent indicates macOS\n *\n * 检查用户代理是否表示 macOS\n *\n * @param ua - User agent string / 用户代理字符串\n *\n * @returns Whether it's macOS / 是否为 macOS\n */\nexport const isMacOS = (ua: string): boolean =>\n  [/(mac os x) ?([\\w. ]*)/i, /(macintosh|mac_powerpc\\b)(?!.+haiku)/i].some(\n    (item) => item.test(ua),\n  )\n","/**\n * Get darkmode status from DOM\n *\n * 从 DOM 获取暗色模式状态\n *\n * @returns Darkmode status / 暗色模式状态\n */\nexport const getDarkMode = (): boolean =>\n  document.documentElement.getAttribute('data-theme') === 'dark'\n","import type { PageHeader } from 'vuepress/shared'\nimport type { GetHeadersOptions, HeaderLevels } from '../../shared/index.js'\n\nconst DEFAULT_HEADER_SELECTOR = [...new Array<undefined>(6)]\n  .map((_, i) => `[vp-content] h${i + 1}`)\n  .join(',')\n\nexport type HeaderItem = Omit<PageHeader, 'children'> & {\n  element: HTMLHeadingElement\n  children: HeaderItem[]\n}\n\nexport const resolveHeaders = (\n  headers: HeaderItem[],\n  levels: HeaderLevels = 2,\n): HeaderItem[] => {\n  if (levels === false) {\n    return []\n  }\n\n  const [high, low]: [number, number] =\n    typeof levels === 'number'\n      ? [levels, levels]\n      : levels === 'deep'\n        ? [2, 6]\n        : levels\n  const allowedHeaders = headers.filter(\n    (header) => header.level >= high && header.level <= low,\n  )\n\n  const result: HeaderItem[] = []\n\n  // eslint-disable-next-line no-restricted-syntax\n  outer: for (let i = 0; i < allowedHeaders.length; i++) {\n    const current = allowedHeaders[i]\n\n    if (i === 0) {\n      result.push(current)\n    } else {\n      for (let j = i - 1; j >= 0; j--) {\n        const prev = allowedHeaders[j]\n        if (prev.level < current.level) {\n          prev.children.push(current)\n          continue outer\n        }\n      }\n      result.push(current)\n    }\n  }\n\n  return result\n}\n\nconst serializeHeader = (h: Element, ignore: string[] = []): string => {\n  let text: string\n\n  if (ignore.length) {\n    const clone = h.cloneNode(true) as Element\n\n    clone.querySelectorAll(ignore.join(',')).forEach((el) => {\n      el.remove()\n    })\n\n    text = clone.textContent || ''\n  } else {\n    text = h.textContent || ''\n  }\n\n  return text.trim()\n}\n\nexport const getHeadersFromDom = (\n  selector = DEFAULT_HEADER_SELECTOR,\n  ignore: string[] = [],\n): HeaderItem[] =>\n  Array.from(document.querySelectorAll(selector))\n    .filter((el) => el.id && el.hasChildNodes())\n    .map((el) => ({\n      element: el as HTMLHeadingElement,\n      title: serializeHeader(el, ignore),\n      link: `#${el.id}`,\n      slug: el.id,\n      level: Number(el.tagName[1]),\n      children: [],\n    }))\n\n/**\n * Get headers of current page.\n *\n * 获取当前页面的标题\n *\n * @param options - Options for getting headers / 获取标题的选项\n *\n * @returns Array of header items / 标题项数组\n */\nexport const getHeaders = ({\n  selector = DEFAULT_HEADER_SELECTOR,\n  levels = 2,\n  ignore = [],\n}: GetHeadersOptions = {}): HeaderItem[] =>\n  resolveHeaders(getHeadersFromDom(selector, ignore), levels)\n","/**\n * Determines whether the user is currently focusing a text control.\n * In this case, the search plugin shouldn't hijack any hotkeys because\n * the user might be typing into a text field, using type-ahead search\n * in a `select` element, etc.\n *\n * 判断用户当前是否正在聚焦文本控件。\n * 在这种情况下，搜索插件不应该劫持任何热键，因为\n * 用户可能正在文本字段中输入，在 `select` 元素中使用预输入搜索等。\n *\n * @param target - Event target / 事件目标\n *\n * @returns Whether user is focusing a text control / 用户是否正在聚焦文本控件\n */\nexport const isFocusingTextControl = (target: EventTarget): boolean => {\n  if (!(target instanceof Element)) {\n    return false\n  }\n  return (\n    document.activeElement === target &&\n    (['TEXTAREA', 'SELECT', 'INPUT'].includes(target.tagName) ||\n      target.hasAttribute('contenteditable'))\n  )\n}\n","import { isString } from 'vuepress/shared'\n\nexport { isFunction, isString, isPlainObject } from 'vuepress/shared'\n\n/* Type helper */\n\n/**\n * Check if a value is defined\n *\n * 检查值是否已定义\n *\n * @param val - The value to check / 要检查的值\n *\n * @returns Whether the value is defined / 值是否已定义\n *\n * @example\n * ```ts\n * isDef(undefined) // false\n * isDef(null) // true\n * isDef(0) // true\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isDef = <T = any>(val?: T): val is T => typeof val !== 'undefined'\n\n/**\n * Check if a value is boolean\n *\n * 检查值是否为布尔值\n *\n * @param val - The value to check / 要检查的值\n *\n * @returns Whether the value is boolean / 值是否为布尔值\n *\n * @example\n * ```ts\n * isBoolean(true) // true\n * isBoolean(false) // true\n * isBoolean('true') // false\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport const isBoolean = (val: any): val is boolean => typeof val === 'boolean'\n\n/**\n * Check if a value is number\n *\n * 检查值是否为数字\n *\n * @param val - The value to check / 要检查的值\n *\n * @returns Whether the value is number / 值是否为数字\n *\n * @example\n * ```ts\n * isNumber(42) // true\n * isNumber('42') // false\n * isNumber(NaN) // true\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport const isNumber = (val: any): val is number => typeof val === 'number'\n\n/**\n * Check if a value is array\n *\n * 检查值是否为数组\n */\nexport const { isArray } = Array\n\n/**\n * Check if a value is regexp\n *\n * 检查值是否为正则表达式\n *\n * @param val - The value to check / 要检查的值\n *\n * @returns Whether the value is regexp / 值是否为正则表达式\n *\n * @example\n * ```ts\n * isRegExp(/test/) // true\n * isRegExp('test') // false\n * ```\n */\nexport const isRegExp = (val: unknown): val is RegExp => val instanceof RegExp\n\n/* String helper */\n\n/**\n * Check if a value is starting with the given prefix\n *\n * 检查值是否以给定前缀开头\n *\n * @param str - The string to check / 要检查的字符串\n * @param prefix - The prefix to match / 要匹配的前缀\n *\n * @returns Whether the string starts with the prefix / 字符串是否以前缀开头\n *\n * @example\n * ```ts\n * startsWith('hello world', 'hello') // true\n * startsWith('hello world', 'world') // false\n * startsWith(123, 'hello') // false\n * ```\n */\nexport const startsWith = (str: unknown, prefix: string): boolean =>\n  isString(str) && str.startsWith(prefix)\n\n/**\n * Check if a value is ending with the given suffix\n *\n * 检查值是否以给定后缀结尾\n *\n * @param str - The string to check / 要检查的字符串\n * @param suffix - The suffix to match / 要匹配的后缀\n *\n * @returns Whether the string ends with the suffix / 字符串是否以后缀结尾\n *\n * @example\n * ```ts\n * endsWith('hello world', 'world') // true\n * endsWith('hello world', 'hello') // false\n * endsWith(123, 'world') // false\n * ```\n */\nexport const endsWith = (str: unknown, suffix: string): boolean =>\n  isString(str) && str.endsWith(suffix)\n\nexport {\n  ensureEndingSlash,\n  ensureLeadingSlash,\n  removeEndingSlash,\n  removeLeadingSlash,\n} from 'vuepress/shared'\n\n/* Object helper */\nexport const { entries } = Object\nexport const { fromEntries } = Object\nexport const { keys } = Object\nexport const { values } = Object\n","import { entries, isArray, isPlainObject } from './helper.js'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype IAnyObject = Record<string, any>\n\n/**\n * Deep merge objects to the first one\n *\n * 深度合并对象到第一个对象\n *\n * @param originObject - The target object to merge into / 要合并到的目标对象\n * @param overrideObjects - Objects to merge from / 要合并的对象\n *\n * @returns Merged object / 合并后的对象\n *\n * @example\n * ```ts\n * const obj1 = { a: 1, b: { c: 2 } }\n * const obj2 = { b: { d: 3 }, e: 4 }\n * deepAssign(obj1, obj2) // { a: 1, b: { c: 2, d: 3 }, e: 4 }\n * ```\n */\nexport const deepAssign = <\n  T extends IAnyObject,\n  U extends IAnyObject = T,\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-parameters\n  V extends Partial<T> & Partial<U> = T & U,\n>(\n  originObject: T,\n  ...overrideObjects: (U | null | undefined)[]\n): V => {\n  if (overrideObjects.length === 0) return originObject as unknown as V\n\n  /** Object being merged */\n  const assignObject = overrideObjects.shift()\n\n  if (assignObject)\n    entries(assignObject).forEach(([property, value]) => {\n      if (property === '__proto__' || property === 'constructor') return\n      if (isPlainObject(originObject[property]) && isPlainObject(value))\n        deepAssign(originObject[property], value)\n      else if (isArray(value))\n        (originObject as IAnyObject)[property] = [...(value as unknown[])]\n      else if (isPlainObject(value))\n        (originObject as IAnyObject)[property] = {\n          ...value,\n        }\n      else\n        (originObject as IAnyObject)[property] = assignObject[\n          property\n        ] as unknown\n    })\n\n  return deepAssign(originObject, ...overrideObjects)\n}\n","/**\n * Get Date info from user input\n *\n * 从用户输入获取日期信息\n *\n * @param input - The input to parse / 要解析的输入\n *\n * @returns Date object or null if input is invalid / 日期对象，如果输入无效则返回 null\n *\n * @example\n * ```ts\n * getDate('2023-01-01') // Date object\n * getDate(1640995200000) // Date object\n * getDate('invalid') // null\n * ```\n */\nexport const getDate = (input: unknown): Date | null => {\n  if (input) {\n    if (typeof input === 'number') return new Date(input)\n\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    const date = Date.parse(input.toString())\n\n    if (!Number.isNaN(date)) return new Date(date)\n  }\n\n  return null\n}\n\n/**\n * Date sorter from latest to oldest\n *\n * 从最新到最旧的日期排序器\n *\n * @param valueA - First date value / 第一个日期值\n * @param valueB - Second date value / 第二个日期值\n *\n * @returns Comparison result / 比较结果\n *\n * @example\n * ```ts\n * const dates = ['2023-01-01', '2023-12-31', '2023-06-15']\n * dates.sort(dateSorter) // ['2023-12-31', '2023-06-15', '2023-01-01']\n * ```\n */\nexport const dateSorter = (\n  valueA: Date | number | string | undefined,\n  valueB: Date | number | string | undefined,\n): number => {\n  const dateA = getDate(typeof valueA === 'number' ? new Date(valueA) : valueA)\n  const dateB = getDate(typeof valueB === 'number' ? new Date(valueB) : valueB)\n\n  if (!dateA) return dateB ? 1 : 0\n  if (!dateB) return -1\n\n  return dateB.getTime() - dateA.getTime()\n}\n","import { isLinkExternal, isLinkWithProtocol } from 'vuepress/shared'\nimport { startsWith } from './helper.js'\n\nexport { isLinkExternal, isLinkHttp, isLinkWithProtocol } from 'vuepress/shared'\n\n/**\n * Check if a value is a valid absolute url\n *\n * 检查值是否为有效的绝对 URL\n *\n * @param test - The value to test / 要测试的值\n *\n * @returns Whether the value is a valid absolute url / 值是否为有效的绝对 URL\n *\n * @example\n * ```ts\n * isLinkAbsolute('/path/to/page') // true\n * isLinkAbsolute('//example.com') // false\n * isLinkAbsolute('relative/path') // false\n * ```\n */\nexport const isLinkAbsolute = (test: unknown): boolean =>\n  startsWith(test, '/') && (test as string)[1] !== '/'\n\n/**\n * Check if a link is relative\n *\n * 检查链接是否为相对链接\n *\n * @param link - The link to check / 要检查的链接\n *\n * @returns Whether the link is relative / 链接是否为相对链接\n *\n * @example\n * ```ts\n * isLinkRelative('path/to/page') // true\n * isLinkRelative('/absolute/path') // true\n * isLinkRelative('https://example.com') // false\n * ```\n */\nexport const isLinkRelative = (link: string): boolean =>\n  !isLinkExternal(link) && !isLinkWithProtocol(link)\n","import type { VNode } from 'vue'\nimport { Comment, Fragment } from 'vue'\n\nimport { isArray } from '../../shared/index.js'\nimport type { SlotContent } from '../typings/index.js'\n\nconst isVNodeChildrenEmpty = (children: VNode[]): boolean =>\n  children.every((item) => {\n    if (item.type === Comment) return true\n\n    if (item.type === Fragment) {\n      return (\n        item.children == null ||\n        (isArray(item.children) &&\n          isVNodeChildrenEmpty(item.children as VNode[]))\n      )\n    }\n\n    return false\n  })\n\n/**\n * Check whether a slot is currently empty.\n *\n * 检查插槽当前是否为空\n *\n * @param normalizedSlotContent - The normalized slot content, which should be the results of the slot function / 标准化的插槽内容，应该是插槽函数的结果\n *\n * @returns True if the slot content is empty, false otherwise / 如果插槽内容为空则返回 true，否则返回 false\n */\nexport const isSlotContentEmpty = (\n  normalizedSlotContent: SlotContent,\n): boolean => {\n  if (normalizedSlotContent == null) return true\n\n  if (isArray(normalizedSlotContent))\n    return isVNodeChildrenEmpty(normalizedSlotContent)\n\n  return false\n}\n","import { isString } from 'vuepress/shared'\nimport type { KeyOptions } from '../../shared/index.js'\n\n/**\n * Check if keyboard event matches any of the provided hotkeys\n *\n * 检查键盘事件是否匹配提供的任何热键\n *\n * @param event - Keyboard event / 键盘事件\n * @param hotKeys - Array of hotkey configurations / 热键配置数组\n *\n * @returns Whether the event matches any hotkey / 事件是否匹配任何热键\n */\nexport const isKeyMatched = (\n  event: KeyboardEvent,\n  hotKeys: (KeyOptions | string)[],\n): boolean =>\n  hotKeys.some((item) => {\n    if (isString(item)) return item === event.key\n\n    const { key, ctrl = false, shift = false, alt = false } = item\n\n    return (\n      key === event.key &&\n      ctrl === event.ctrlKey &&\n      shift === event.shiftKey &&\n      alt === event.altKey\n    )\n  })\n","import type { App } from 'vue'\nimport { camelize, capitalize, getCurrentInstance } from 'vue'\n\n/**\n * Check if a global component with the given name exists\n *\n * 检查给定名称的全局组件是否存在\n *\n * @param name - Component name / 组件名称\n * @param app - Vue app instance / Vue 应用实例\n *\n * @returns Whether the global component exists / 全局组件是否存在\n */\nexport const hasGlobalComponent = (name: string, app?: App): boolean => {\n  const globalComponents = (app?._instance ?? getCurrentInstance())?.appContext\n    .components\n\n  if (!globalComponents) return false\n\n  return (\n    name in globalComponents ||\n    camelize(name) in globalComponents ||\n    capitalize(camelize(name)) in globalComponents\n  )\n}\n","import { keys } from '../../shared/index.js'\n\nconst containerId = 'message-container'\n\n/**\n * Message utility class for displaying toast messages\n *\n * 用于显示提示消息的消息工具类\n */\nexport class Message {\n  private elements: Record<number, HTMLDivElement>\n\n  public constructor() {\n    this.elements = {}\n  }\n\n  /**\n   * Get the message container element\n   *\n   * 获取消息容器元素\n   *\n   * @returns Message container element / 消息容器元素\n   */\n  public static get containerElement(): HTMLElement {\n    let containerElement = document.getElementById(containerId)\n\n    if (containerElement) return containerElement\n\n    containerElement = document.createElement('div')\n    containerElement.id = containerId\n    document.body.appendChild(containerElement)\n\n    return containerElement\n  }\n\n  /**\n   * Get message element by ID\n   *\n   * 根据 ID 获取消息元素\n   *\n   * @param messageId - Message ID / 消息 ID\n   *\n   * @returns Message element / 消息元素\n   */\n  public getElement(messageId: number): HTMLDivElement {\n    return this.elements[messageId]\n  }\n\n  /**\n   * Pop a new message\n   *\n   * 弹出新消息\n   *\n   * @param html - Message HTML content / 消息 HTML 内容\n   * @param duration - Duration to display in milliseconds / 显示持续时间（毫秒）\n   * @param clickToClose - Whether to close on click / 是否点击关闭\n   *\n   * @returns Message ID / 消息 ID\n   */\n  public pop(html: string, duration = 2000, clickToClose = true): number {\n    const messageId = Date.now()\n    const messageElement = document.createElement('div')\n    messageElement.className = 'message-item move-in'\n    messageElement.innerHTML = html\n    Message.containerElement.appendChild(messageElement)\n    this.elements[messageId] = messageElement\n\n    if (clickToClose)\n      messageElement.addEventListener('click', () => {\n        this.close(messageId)\n      })\n\n    if (duration > 0)\n      setTimeout(() => {\n        this.close(messageId)\n      }, duration)\n\n    return messageId\n  }\n\n  /**\n   * Close message by ID or close all messages\n   *\n   * 根据 ID 关闭消息或关闭所有消息\n   *\n   * @param messageId - Message ID to close, if not provided, close all / 要关闭的消息 ID，如果未提供则关闭所有\n   */\n  public close(messageId?: number): void {\n    if (messageId) {\n      const messageElement = this.elements[messageId]\n\n      messageElement.classList.remove('move-in')\n      messageElement.classList.add('move-out')\n      messageElement.addEventListener('animationend', () => {\n        messageElement.remove()\n        delete this.elements[messageId]\n      })\n    } else {\n      keys(this.elements).forEach((id) => {\n        this.close(Number(id))\n      })\n    }\n  }\n\n  /**\n   * Destroy the message instance\n   *\n   * 销毁消息实例\n   */\n  public destroy(): void {\n    const containerElement = document.getElementById(containerId)\n    if (containerElement) document.body.removeChild(containerElement)\n    this.elements = {}\n  }\n}\n","/**\n * Wait for a given time\n *\n * 等待指定时间\n *\n * @param ms - Wait time in milliseconds / 等待时间（毫秒）\n *\n * @returns A promise that resolves after the given time / 在指定时间后解析的 Promise\n */\nexport const wait = (ms: number): Promise<void> =>\n  new Promise<void>((resolve) => {\n    setTimeout(resolve, ms)\n  })\n","import type { ComputedRef, InjectionKey, Ref, WritableComputedRef } from 'vue'\nimport { inject, readonly, ref } from 'vue'\n\nimport { getDarkMode } from '../utils/index.js'\n\nexport type DarkModeRef = Ref<boolean>\n\nexport const darkModeSymbol: InjectionKey<\n  ComputedRef<boolean> | Ref<boolean> | WritableComputedRef<boolean>\n> = Symbol(__VUEPRESS_DEV__ ? 'darkMode' : '')\n\nconst darkmode: DarkModeRef = ref(false)\n\n// Ensure darkmode is initialized only once in client-side\nif (typeof document !== 'undefined') {\n  darkmode.value = getDarkMode()\n\n  const mutationObserver = new MutationObserver(() => {\n    darkmode.value = getDarkMode()\n  })\n\n  mutationObserver.observe(document.documentElement, {\n    attributeFilter: ['data-theme'],\n    attributes: true,\n  })\n}\n\n/**\n * Get darkmode status\n *\n * 获取暗色模式状态\n *\n * @returns Readonly darkmode ref / 只读的暗色模式响应式引用\n */\n\nexport const useDarkMode = (): Readonly<Ref<boolean>> =>\n  readonly(inject(darkModeSymbol, darkmode))\n","import type { MaybeRef, Ref } from 'vue'\nimport { ref, toValue } from 'vue'\nimport { onContentUpdated } from 'vuepress/client'\nimport type { GetHeadersOptions } from '../../shared/index.js'\nimport type { HeaderItem } from '../utils/index.js'\nimport { getHeaders } from '../utils/index.js'\n\nexport type HeadersRef = Ref<HeaderItem[]>\n\n/**\n * Composables for page headers\n *\n * 页面标题的组合函数\n *\n * @param options - Options for getting headers / 获取标题的选项\n *\n * @returns Reactive headers reference / 响应式标题引用\n */\nexport const useHeaders = (\n  options: MaybeRef<GetHeadersOptions | undefined> = {},\n): HeadersRef => {\n  const headersRef: HeadersRef = ref([])\n\n  onContentUpdated((reason) => {\n    headersRef.value =\n      reason === 'beforeUnmount' ? [] : getHeaders(toValue(options))\n  })\n\n  return headersRef\n}\n","import type { ComputedRef, MaybeRef } from 'vue'\nimport { computed, toValue } from 'vue'\nimport { useRouteLocale } from 'vuepress/client'\nimport type { LocaleData } from 'vuepress/shared'\nimport type { ExactLocaleConfig } from '../../shared/index.js'\n\n/**\n * Composables for current locale config\n *\n * 获取当前本地化配置的组合函数\n *\n * @param localesConfig - Client locale config / 客户端本地化配置\n *\n * @returns Current locale config / 当前本地化配置\n */\nexport const useLocaleConfig = <T extends LocaleData>(\n  localesConfig: MaybeRef<ExactLocaleConfig<T>>,\n): ComputedRef<T> => {\n  const routeLocale = useRouteLocale()\n\n  return computed(() => toValue(localesConfig)[routeLocale.value] ?? {})\n}\n\n/**\n * Short alias of `useLocaleConfig`\n *\n * `useLocaleConfig` 的简短别名\n */\nexport const useLocale = useLocaleConfig\n","import { useEventListener } from '@vueuse/core'\nimport type { MaybeRef } from 'vue'\nimport { toValue } from 'vue'\nimport type { KeyOptions } from '../../shared/index.js'\nimport { isFocusingTextControl, isKeyMatched } from '../utils/index.js'\n\n/**\n * Register keyboard event listeners for hotkeys\n *\n * 为热键注册键盘事件监听器\n *\n * @param hotKeys - Array of key configurations / 键配置数组\n * @param action - Action to execute when hotkey is pressed / 按下热键时执行的操作\n */\nexport const useKeys = (\n  hotKeys: MaybeRef<(KeyOptions | string)[] | undefined>,\n  action: () => Promise<void> | void,\n): void => {\n  const onKeydown = (event: KeyboardEvent): void => {\n    const hotKeysValue = toValue(hotKeys)\n\n    if (hotKeysValue?.length) {\n      if (\n        // key matches\n        isKeyMatched(event, hotKeysValue) &&\n        // event does not come from the search box itself or\n        // user isn't focusing (and thus perhaps typing in) a text control\n        !isFocusingTextControl(event.target!)\n      ) {\n        event.preventDefault()\n        void action()\n      }\n    }\n  }\n\n  useEventListener('keydown', onKeydown)\n}\n","import type { ComputedRef } from 'vue'\nimport { computed } from 'vue'\nimport { useRoutes } from 'vuepress/client'\n\n/**\n * Composables for route paths\n *\n * 获取路由路径的组合函数\n *\n * @returns Computed reference to route paths / 路由路径的计算引用\n */\nexport const useRoutePaths = (): ComputedRef<string[]> => {\n  const routes = useRoutes()\n\n  return computed(() => Object.keys(routes.value))\n}\n"],"names":["getLength","size","LoadingIcon","stroke","wrapper","height","icon","h","RenderDefault","_props","slots","FadeInExpandTransition","defineComponent","props","handleBeforeLeave","el","handleLeave","handleAfterLeave","handleEnter","memorizedWidth","memorizedHeight","handleAfterEnter","TransitionGroup","Transition","encodeData","data","level","buffer","strToU8","zipped","zlibSync","binary","strFromU8","decodeData","base64","unzlibSync","isMobile","ua","isChromeWebView","isSafariMobile","isSafari","isiPhone","isiPad","item","isWindows","isIOS","isMacOS","getDarkMode","DEFAULT_HEADER_SELECTOR","_","i","resolveHeaders","headers","levels","high","low","allowedHeaders","header","result","outer","current","j","prev","serializeHeader","ignore","text","clone","getHeadersFromDom","selector","getHeaders","isFocusingTextControl","target","isDef","val","isBoolean","isNumber","isArray","isRegExp","startsWith","str","prefix","isString","endsWith","suffix","entries","fromEntries","keys","values","deepAssign","originObject","overrideObjects","assignObject","property","value","isPlainObject","getDate","input","date","dateSorter","valueA","valueB","dateA","dateB","isLinkAbsolute","test","isLinkRelative","link","isLinkExternal","isLinkWithProtocol","isVNodeChildrenEmpty","children","Comment","Fragment","isSlotContentEmpty","normalizedSlotContent","isKeyMatched","event","hotKeys","key","ctrl","shift","alt","hasGlobalComponent","name","app","globalComponents","getCurrentInstance","camelize","capitalize","containerId","Message","containerElement","messageId","html","duration","clickToClose","messageElement","id","wait","ms","resolve","darkModeSymbol","darkmode","ref","useDarkMode","readonly","inject","useHeaders","options","headersRef","onContentUpdated","reason","toValue","useLocaleConfig","localesConfig","routeLocale","useRouteLocale","computed","useLocale","useKeys","action","useEventListener","hotKeysValue","useRoutePaths","routes","useRoutes"],"mappings":"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"}