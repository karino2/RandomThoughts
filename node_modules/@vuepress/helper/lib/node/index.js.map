{"version":3,"file":"index.js","sources":["../../src/shared/helper.ts","../../src/shared/deepAssign.ts","../../src/shared/date.ts","../../src/shared/link.ts","../../src/node/bundler/getBundlerName.ts","../../src/node/bundler/addCustomElement.ts","../../src/node/bundler/vite/mergeViteConfig.ts","../../src/node/utils/data.ts","../../src/node/utils/isModuleAvailable.ts","../../src/node/utils/getModulePath.ts","../../src/node/utils/logger.ts","../../src/node/utils/packageManager.ts","../../src/node/bundler/vite/viteHelper.ts","../../src/node/bundler/customizeDevServer.ts","../../src/node/bundler/webpack/chainWebpack.ts","../../src/node/bundler/webpack/configWebpack.ts","../../src/node/locales/getFullLocaleConfig.ts","../../src/node/page/excerpt.ts","../../src/node/page/text.ts"],"sourcesContent":["import { isString } from 'vuepress/shared'\n\nexport { isFunction, isString, isPlainObject } from 'vuepress/shared'\n\n/* Type helper */\n\n/**\n * Check if a value is defined\n *\n * 检查值是否已定义\n *\n * @param val - The value to check / 要检查的值\n *\n * @returns Whether the value is defined / 值是否已定义\n *\n * @example\n * ```ts\n * isDef(undefined) // false\n * isDef(null) // true\n * isDef(0) // true\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isDef = <T = any>(val?: T): val is T => typeof val !== 'undefined'\n\n/**\n * Check if a value is boolean\n *\n * 检查值是否为布尔值\n *\n * @param val - The value to check / 要检查的值\n *\n * @returns Whether the value is boolean / 值是否为布尔值\n *\n * @example\n * ```ts\n * isBoolean(true) // true\n * isBoolean(false) // true\n * isBoolean('true') // false\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport const isBoolean = (val: any): val is boolean => typeof val === 'boolean'\n\n/**\n * Check if a value is number\n *\n * 检查值是否为数字\n *\n * @param val - The value to check / 要检查的值\n *\n * @returns Whether the value is number / 值是否为数字\n *\n * @example\n * ```ts\n * isNumber(42) // true\n * isNumber('42') // false\n * isNumber(NaN) // true\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport const isNumber = (val: any): val is number => typeof val === 'number'\n\n/**\n * Check if a value is array\n *\n * 检查值是否为数组\n */\nexport const { isArray } = Array\n\n/**\n * Check if a value is regexp\n *\n * 检查值是否为正则表达式\n *\n * @param val - The value to check / 要检查的值\n *\n * @returns Whether the value is regexp / 值是否为正则表达式\n *\n * @example\n * ```ts\n * isRegExp(/test/) // true\n * isRegExp('test') // false\n * ```\n */\nexport const isRegExp = (val: unknown): val is RegExp => val instanceof RegExp\n\n/* String helper */\n\n/**\n * Check if a value is starting with the given prefix\n *\n * 检查值是否以给定前缀开头\n *\n * @param str - The string to check / 要检查的字符串\n * @param prefix - The prefix to match / 要匹配的前缀\n *\n * @returns Whether the string starts with the prefix / 字符串是否以前缀开头\n *\n * @example\n * ```ts\n * startsWith('hello world', 'hello') // true\n * startsWith('hello world', 'world') // false\n * startsWith(123, 'hello') // false\n * ```\n */\nexport const startsWith = (str: unknown, prefix: string): boolean =>\n  isString(str) && str.startsWith(prefix)\n\n/**\n * Check if a value is ending with the given suffix\n *\n * 检查值是否以给定后缀结尾\n *\n * @param str - The string to check / 要检查的字符串\n * @param suffix - The suffix to match / 要匹配的后缀\n *\n * @returns Whether the string ends with the suffix / 字符串是否以后缀结尾\n *\n * @example\n * ```ts\n * endsWith('hello world', 'world') // true\n * endsWith('hello world', 'hello') // false\n * endsWith(123, 'world') // false\n * ```\n */\nexport const endsWith = (str: unknown, suffix: string): boolean =>\n  isString(str) && str.endsWith(suffix)\n\nexport {\n  ensureEndingSlash,\n  ensureLeadingSlash,\n  removeEndingSlash,\n  removeLeadingSlash,\n} from 'vuepress/shared'\n\n/* Object helper */\nexport const { entries } = Object\nexport const { fromEntries } = Object\nexport const { keys } = Object\nexport const { values } = Object\n","import { entries, isArray, isPlainObject } from './helper.js'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype IAnyObject = Record<string, any>\n\n/**\n * Deep merge objects to the first one\n *\n * 深度合并对象到第一个对象\n *\n * @param originObject - The target object to merge into / 要合并到的目标对象\n * @param overrideObjects - Objects to merge from / 要合并的对象\n *\n * @returns Merged object / 合并后的对象\n *\n * @example\n * ```ts\n * const obj1 = { a: 1, b: { c: 2 } }\n * const obj2 = { b: { d: 3 }, e: 4 }\n * deepAssign(obj1, obj2) // { a: 1, b: { c: 2, d: 3 }, e: 4 }\n * ```\n */\nexport const deepAssign = <\n  T extends IAnyObject,\n  U extends IAnyObject = T,\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-parameters\n  V extends Partial<T> & Partial<U> = T & U,\n>(\n  originObject: T,\n  ...overrideObjects: (U | null | undefined)[]\n): V => {\n  if (overrideObjects.length === 0) return originObject as unknown as V\n\n  /** Object being merged */\n  const assignObject = overrideObjects.shift()\n\n  if (assignObject)\n    entries(assignObject).forEach(([property, value]) => {\n      if (property === '__proto__' || property === 'constructor') return\n      if (isPlainObject(originObject[property]) && isPlainObject(value))\n        deepAssign(originObject[property], value)\n      else if (isArray(value))\n        (originObject as IAnyObject)[property] = [...(value as unknown[])]\n      else if (isPlainObject(value))\n        (originObject as IAnyObject)[property] = {\n          ...value,\n        }\n      else\n        (originObject as IAnyObject)[property] = assignObject[\n          property\n        ] as unknown\n    })\n\n  return deepAssign(originObject, ...overrideObjects)\n}\n","/**\n * Get Date info from user input\n *\n * 从用户输入获取日期信息\n *\n * @param input - The input to parse / 要解析的输入\n *\n * @returns Date object or null if input is invalid / 日期对象，如果输入无效则返回 null\n *\n * @example\n * ```ts\n * getDate('2023-01-01') // Date object\n * getDate(1640995200000) // Date object\n * getDate('invalid') // null\n * ```\n */\nexport const getDate = (input: unknown): Date | null => {\n  if (input) {\n    if (typeof input === 'number') return new Date(input)\n\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    const date = Date.parse(input.toString())\n\n    if (!Number.isNaN(date)) return new Date(date)\n  }\n\n  return null\n}\n\n/**\n * Date sorter from latest to oldest\n *\n * 从最新到最旧的日期排序器\n *\n * @param valueA - First date value / 第一个日期值\n * @param valueB - Second date value / 第二个日期值\n *\n * @returns Comparison result / 比较结果\n *\n * @example\n * ```ts\n * const dates = ['2023-01-01', '2023-12-31', '2023-06-15']\n * dates.sort(dateSorter) // ['2023-12-31', '2023-06-15', '2023-01-01']\n * ```\n */\nexport const dateSorter = (\n  valueA: Date | number | string | undefined,\n  valueB: Date | number | string | undefined,\n): number => {\n  const dateA = getDate(typeof valueA === 'number' ? new Date(valueA) : valueA)\n  const dateB = getDate(typeof valueB === 'number' ? new Date(valueB) : valueB)\n\n  if (!dateA) return dateB ? 1 : 0\n  if (!dateB) return -1\n\n  return dateB.getTime() - dateA.getTime()\n}\n","import { isLinkExternal, isLinkWithProtocol } from 'vuepress/shared'\nimport { startsWith } from './helper.js'\n\nexport { isLinkExternal, isLinkHttp, isLinkWithProtocol } from 'vuepress/shared'\n\n/**\n * Check if a value is a valid absolute url\n *\n * 检查值是否为有效的绝对 URL\n *\n * @param test - The value to test / 要测试的值\n *\n * @returns Whether the value is a valid absolute url / 值是否为有效的绝对 URL\n *\n * @example\n * ```ts\n * isLinkAbsolute('/path/to/page') // true\n * isLinkAbsolute('//example.com') // false\n * isLinkAbsolute('relative/path') // false\n * ```\n */\nexport const isLinkAbsolute = (test: unknown): boolean =>\n  startsWith(test, '/') && (test as string)[1] !== '/'\n\n/**\n * Check if a link is relative\n *\n * 检查链接是否为相对链接\n *\n * @param link - The link to check / 要检查的链接\n *\n * @returns Whether the link is relative / 链接是否为相对链接\n *\n * @example\n * ```ts\n * isLinkRelative('path/to/page') // true\n * isLinkRelative('/absolute/path') // true\n * isLinkRelative('https://example.com') // false\n * ```\n */\nexport const isLinkRelative = (link: string): boolean =>\n  !isLinkExternal(link) && !isLinkWithProtocol(link)\n","import type { App } from 'vuepress/core'\n\n/**\n * Get current bundler name\n *\n * 获取当前打包器名称\n *\n * @param app - VuePress Node App / VuePress Node 应用\n *\n * @returns The bundler name / 打包器名称\n *\n * @example\n * ```ts\n * // With @vuepress/bundler-vite\n * getBundlerName(app) // 'vite'\n * // With @vuepress/bundler-webpack\n * getBundlerName(app) // 'webpack'\n * ```\n */\nexport const getBundlerName = (app: App): string => {\n  const { name } = app.options.bundler\n\n  return name.match(/^@vuepress\\/bundler-(.*)$/)?.[1] || name\n}\n","import type { ViteBundlerOptions } from '@vuepress/bundler-vite'\nimport type { WebpackBundlerOptions } from '@vuepress/bundler-webpack'\nimport type { App } from 'vuepress/core'\nimport { isString } from '../../shared/index.js'\nimport { getBundlerName } from './getBundlerName.js'\n\n/**\n * Add tags as customElement\n *\n * 将标签添加为自定义元素\n *\n * @param bundlerOptions - VuePress Bundler config / VuePress 打包器配置\n * @param app - VuePress Node App / VuePress Node 应用\n * @param customElement - Tags recognized as custom element / 识别为自定义元素的标签\n *\n * @example\n * ```ts\n * // Add single custom element\n * addCustomElement(bundlerOptions, app, 'my-element')\n *\n * // Add multiple custom elements\n * addCustomElement(bundlerOptions, app, ['element1', 'element2'])\n *\n * // Add elements matching a pattern\n * addCustomElement(bundlerOptions, app, /^my-/)\n * ```\n */\nexport const addCustomElement = (\n  bundlerOptions: unknown,\n  app: App,\n  customElement: RegExp | string[] | string,\n): void => {\n  const customElements = isString(customElement)\n    ? [customElement]\n    : customElement\n  const bundlerName = getBundlerName(app)\n\n  // for vite\n  if (bundlerName === 'vite') {\n    const viteBundlerConfig = bundlerOptions as ViteBundlerOptions\n\n    // eslint-disable-next-line no-multi-assign\n    const { isCustomElement } = (((viteBundlerConfig.vuePluginOptions ??=\n      {}).template ??= {}).compilerOptions ??= {})\n\n    viteBundlerConfig.vuePluginOptions.template.compilerOptions.isCustomElement =\n      (tag: string): boolean | void => {\n        if (\n          customElements instanceof RegExp\n            ? customElements.test(tag)\n            : customElements.includes(tag)\n        )\n          return true\n\n        return isCustomElement?.(tag)\n      }\n  }\n\n  // for webpack\n  else if (bundlerName === 'webpack') {\n    const webpackBundlerConfig = bundlerOptions as WebpackBundlerOptions\n\n    // eslint-disable-next-line no-multi-assign\n    const { isCustomElement } = ((webpackBundlerConfig.vue ??=\n      {}).compilerOptions ??= {})\n\n    webpackBundlerConfig.vue.compilerOptions.isCustomElement = (\n      tag: string,\n    ): boolean | void => {\n      if (\n        customElements instanceof RegExp\n          ? customElements.test(tag)\n          : customElements.includes(tag)\n      )\n        return true\n\n      return isCustomElement?.(tag)\n    }\n  }\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\nTypes from https://github.com/rollup/plugins/blob/master/packages/alias/types/index.d.ts\nInlined because the plugin is bundled.\nhttps://github.com/rollup/plugins/blob/master/LICENSE\nThe MIT License (MIT)\nCopyright (c) 2019 RollupJS Plugin Contributors (https://github.com/rollup/plugins/graphs/contributors)\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\nCode from https://github.com/vitejs/vite\nInlined because vite is optional\nhttps://github.com/vitejs/vite/blob/main/LICENSE\n\nMIT License\n\nCopyright (c) 2019-present, Yuxi (Evan) You and Vite contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport { endsWith, isArray, isString, keys } from '../../../shared/index.js'\n\ninterface Alias {\n  find: RegExp | string\n  replacement: string\n  /**\n   * Instructs the plugin to use an alternative resolving algorithm,\n   * rather than the Rollup's resolver.\n   * @default null\n   */\n  customResolver?: ResolverFunction | ResolverObject | null\n}\n\ntype ResolverFunction = (...args: unknown[]) => unknown\n\ninterface ResolverObject {\n  buildStart?: (...args: unknown[]) => unknown\n  resolveId: ResolverFunction\n}\n\ntype AliasOptions = Record<string, string> | readonly Alias[]\n\nconst isObject = (value: unknown): value is Record<string, any> =>\n  Object.prototype.toString.call(value) === '[object Object]'\n\nconst arraify = <T>(target: T | T[]): T[] =>\n  isArray(target) ? target : [target]\n\nconst normalizeSingleAlias = ({\n  find,\n  replacement,\n  customResolver,\n}: Alias): Alias => {\n  if (isString(find) && endsWith(find, '/') && endsWith(replacement, '/')) {\n    find = find.slice(0, find.length - 1)\n    replacement = replacement.slice(0, replacement.length - 1)\n  }\n\n  const alias: Alias = {\n    find,\n    replacement,\n  }\n\n  if (customResolver) {\n    alias.customResolver = customResolver\n  }\n\n  return alias\n}\n\nconst normalizeAlias = (aliasOption: AliasOptions = []): Alias[] =>\n  isArray(aliasOption)\n    ? aliasOption.map(normalizeSingleAlias)\n    : keys(aliasOption).map((find) =>\n        normalizeSingleAlias({\n          find,\n          replacement: aliasOption[find],\n        }),\n      )\n\nconst mergeAlias = (\n  defaults?: AliasOptions,\n  overrides?: AliasOptions,\n): AliasOptions | undefined => {\n  if (!defaults) return overrides\n  if (!overrides) return defaults\n\n  if (isObject(defaults) && isObject(overrides))\n    // eslint-disable-next-line @typescript-eslint/no-misused-spread\n    return { ...defaults, ...overrides }\n\n  // the order is flipped because the alias is resolved from top-down,\n  // where the later should have higher priority\n  return [...normalizeAlias(overrides), ...normalizeAlias(defaults)]\n}\n\nconst backwardCompatibleWorkerPlugins = (plugins: any): any[] => {\n  if (Array.isArray(plugins)) {\n    return plugins\n  }\n\n  if (typeof plugins === 'function') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    return plugins() as any[]\n  }\n\n  return []\n}\n\nconst mergeConfigRecursively = (\n  { ...merged }: Record<string, any>,\n  overrides: Record<string, any>,\n  rootPath: string,\n): Record<string, any> => {\n  for (const key in overrides) {\n    const value = overrides[key]\n\n    if (value == null) {\n      continue\n    }\n\n    const existing = merged[key]\n\n    if (existing == null) {\n      merged[key] = value\n      continue\n    }\n\n    // fields that require special handling\n    if (key === 'alias' && (rootPath === 'resolve' || rootPath === '')) {\n      merged[key] = mergeAlias(existing, value)\n      continue\n    } else if (key === 'assetsInclude' && rootPath === '') {\n      merged[key] = [].concat(existing, value)\n      continue\n    } else if (\n      key === 'noExternal' &&\n      (rootPath === 'ssr' || rootPath === 'resolve') &&\n      (existing === true || value === true)\n    ) {\n      merged[key] = true\n      continue\n    } else if (key === 'plugins' && rootPath === 'worker') {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      merged[key] = () => [\n        ...backwardCompatibleWorkerPlugins(existing),\n        ...backwardCompatibleWorkerPlugins(value),\n      ]\n      continue\n    } else if (key === 'server' && rootPath === 'server.hmr') {\n      merged[key] = value\n      continue\n    }\n\n    if (isArray(existing) || isArray(value)) {\n      merged[key] = [...arraify(existing), ...arraify(value)]\n      continue\n    }\n\n    if (isObject(existing) && isObject(value)) {\n      merged[key] = mergeConfigRecursively(\n        existing,\n        value,\n        rootPath ? `${rootPath}.${key}` : key,\n      )\n      continue\n    }\n\n    merged[key] = value\n  }\n\n  return merged\n}\n\n/**\n * Merge Vite configurations\n *\n * 合并 Vite 配置\n *\n * @param defaults - Default configuration / 默认配置\n * @param overrides - Override configuration / 覆盖配置\n * @param isRoot - Whether it's root level merge / 是否为根级别合并\n *\n * @returns Merged configuration / 合并后的配置\n */\nexport const mergeViteConfig = (\n  defaults: Record<string, any>,\n  overrides: Record<string, any>,\n  isRoot = true,\n): Record<string, any> =>\n  mergeConfigRecursively(defaults, overrides, isRoot ? '' : '.')\n","import type { DeflateOptions } from 'fflate'\nimport { strFromU8, strToU8, unzlibSync, zlibSync } from 'fflate/node'\n\n/**\n * Encode and compress data\n *\n * 编码和压缩数据\n *\n * @param data - Data to encode / 要编码的数据\n * @param level - Compression level / 压缩级别\n *\n * @returns Base64 encoded compressed data / Base64 编码的压缩数据\n */\nexport const encodeData = (\n  data: string,\n  level: DeflateOptions['level'] = 6,\n): string => {\n  const buffer = strToU8(data)\n  // zlib headers can be found at https://stackoverflow.com/a/54915442\n  const zipped = zlibSync(buffer, { level })\n  const binary = strFromU8(zipped, true)\n\n  return Buffer.from(binary, 'binary').toString('base64')\n}\n\n/**\n * Decode and unzip data\n *\n * 解码和解压数据\n *\n * @param base64 - Base64 encoded data / Base64 编码的数据\n *\n * @returns Decoded string / 解码后的字符串\n */\nexport const decodeData = (base64: string): string => {\n  const binary = Buffer.from(base64, 'base64').toString('binary')\n\n  return strFromU8(unzlibSync(strToU8(binary, true)))\n}\n","/**\n * Check if a module is available\n *\n * 检查模块是否可用\n *\n * @param module - Module name / 模块名称\n * @param meta - Import meta object / 导入元数据对象\n *\n * @returns Whether the module is available / 模块是否可用\n */\nexport const isModuleAvailable = (\n  module: string,\n  meta: ImportMeta,\n): boolean => {\n  try {\n    if (module) meta.resolve(module)\n\n    return true\n  } catch {\n    return false\n  }\n}\n","import { fileURLToPath } from 'node:url'\nimport { path } from 'vuepress/utils'\n\n/**\n * Get file path of a given module url\n *\n * 获取给定模块 URL 的文件路径\n *\n * @param module - Module name / 模块名称\n * @param meta - Import meta object / 导入元数据对象\n *\n * @returns Normalized file path / 标准化的文件路径\n */\nexport const getModulePath = (module: string, meta: ImportMeta): string =>\n  path.normalize(fileURLToPath(meta.resolve(module)))\n","/* eslint-disable no-console */\nimport { colors, ora } from 'vuepress/utils'\n\ntype Ora = ReturnType<typeof ora>\n\n/**\n * Logger utils\n *\n * 日志工具类\n */\nexport class Logger {\n  public constructor(\n    /**\n     * Plugin/Theme name\n     *\n     * 插件/主题名称\n     */\n    private readonly name = '',\n  ) {}\n\n  private init(text: string): Ora {\n    return ora({\n      prefixText: colors.blue(`${this.name}: `) || '',\n      text,\n    })\n  }\n\n  /**\n   * Create a loading spinner with text\n   *\n   * 创建带文本的加载旋转器\n   *\n   * @param msg - Loading message / 加载信息\n   *\n   * @returns Loading spinner control object / 加载旋转器控制对象\n   */\n  public load(msg: string): {\n    succeed: (text?: string) => void\n    fail: (text?: string) => void\n  } {\n    const instance = this.init(msg)\n\n    return {\n      succeed: (text?: string) => instance.succeed(text),\n      fail: (text?: string) => instance.succeed(text),\n    }\n  }\n\n  /**\n   * Log info msg\n   *\n   * 记录信息消息\n   *\n   * @param text - Hint text / 提示文本\n   * @param args - Additional arguments / 额外参数\n   */\n  public info(text = '', ...args: unknown[]): void {\n    this.init(colors.blue(text)).info()\n\n    if (args.length) console.info(...args)\n  }\n\n  /**\n   * Log success msg\n   *\n   * 记录成功消息\n   *\n   * @param text - Success text / 成功文本\n   * @param args - Additional arguments / 额外参数\n   */\n  public succeed(text = '', ...args: unknown[]): void {\n    this.init(colors.green(text)).succeed()\n\n    if (args.length) console.log(...args)\n  }\n\n  /**\n   * Log warning msg\n   *\n   * 记录警告消息\n   *\n   * @param text - Warning text / 警告文本\n   * @param args - Additional arguments / 额外参数\n   */\n  public warn(text = '', ...args: unknown[]): void {\n    this.init(colors.yellow(text)).warn()\n\n    if (args.length) console.warn(...args)\n  }\n\n  /**\n   * Log error msg\n   *\n   * 记录错误消息\n   *\n   * @param text - Error text / 错误文本\n   * @param args - Additional arguments / 额外参数\n   */\n  public error(text = '', ...args: unknown[]): void {\n    this.init(colors.red(text)).fail()\n\n    if (args.length) console.error(...args)\n  }\n}\n","import { spawnSync } from 'node:child_process'\nimport { fs, path } from 'vuepress/utils'\n\nexport type PackageManager = 'bun' | 'npm' | 'pnpm' | 'yarn'\n\nconst globalCache = new Map<string, boolean>()\nconst localCache = new Map<string, PackageManager>()\n\nconst PACKAGE_CONFIG = 'package.json'\nconst NPM_LOCK = 'package-lock.json'\nconst YARN_LOCK = 'yarn.lock'\nconst PNPM_LOCK = 'pnpm-lock.yaml'\nconst BUN_LOCK = 'bun.lockb'\n\nconst isInstalled = (packageManager: PackageManager): boolean => {\n  try {\n    return (\n      spawnSync(`${packageManager} --version`, { shell: true, stdio: 'ignore' })\n        .status === 0\n    )\n  } catch {\n    return false\n  }\n}\n\n/**\n * Check if a package manager is installed globally.\n *\n * 检查包管理器是否已全局安装\n *\n * @param packageManager - Package manager / 包管理器\n *\n * @returns Whether the package manager is installed / 包管理器是否已安装\n */\nexport const isPackageManagerInstalled = (\n  packageManager: PackageManager,\n): boolean => {\n  const key = `global:${packageManager}`\n\n  const status = globalCache.get(key)\n\n  if (status !== undefined) return status\n\n  if (isInstalled(packageManager)) {\n    globalCache.set(key, true)\n\n    return true\n  }\n\n  return false\n}\n\n/**\n * Get package manager setting in package.json\n *\n * 获取 package.json 中的包管理器设置\n *\n * @param cwd - Current working directory / 当前工作目录\n * @param deep - Whether to search in parent directories / 是否在父目录中搜索\n *\n * @returns The type of package manager / 包管理器类型\n */\nexport const getPackageManagerSetting = (\n  cwd = process.cwd(),\n  deep = true,\n): PackageManager | null => {\n  const key = `package:${cwd}`\n\n  const status = localCache.get(key)\n\n  if (status !== undefined) return status\n\n  if (fs.existsSync(path.resolve(cwd, PACKAGE_CONFIG))) {\n    const { packageManager: packageManagerSettings } = JSON.parse(\n      fs.readFileSync(path.resolve(cwd, PACKAGE_CONFIG), 'utf-8'),\n    ) as Record<string, unknown> & { packageManager?: string }\n\n    if (packageManagerSettings) {\n      const packageManager = packageManagerSettings.split(\n        '@',\n      )[0] as PackageManager\n\n      localCache.set(key, packageManager)\n\n      return packageManager\n    }\n  }\n\n  if (deep) {\n    let dir = cwd\n\n    while (dir !== path.dirname(dir)) {\n      dir = path.dirname(dir)\n\n      if (fs.existsSync(path.resolve(cwd, PACKAGE_CONFIG))) {\n        const { packageManager: packageManagerSettings } = JSON.parse(\n          fs.readFileSync(path.resolve(cwd, PACKAGE_CONFIG), 'utf-8'),\n        ) as Record<string, unknown> & { packageManager?: string }\n\n        if (packageManagerSettings) {\n          const packageManager = packageManagerSettings.split(\n            '@',\n          )[0] as PackageManager\n\n          localCache.set(key, packageManager)\n\n          return packageManager\n        }\n      }\n    }\n  }\n\n  return null\n}\n\n/**\n * Get the type of lock file.\n *\n * 获取锁文件的类型\n *\n * @param cwd - Current working directory / 当前工作目录\n * @param deep - Whether to search in parent directories / 是否在父目录中搜索\n *\n * @returns The type of lock file / 锁文件类型\n */\nexport const getTypeofLockFile = (\n  cwd = process.cwd(),\n  deep = true,\n): PackageManager | null => {\n  const key = `local:${cwd}`\n\n  const status = localCache.get(key)\n\n  if (status !== undefined) return status\n\n  if (fs.existsSync(path.resolve(cwd, PNPM_LOCK))) {\n    localCache.set(key, 'pnpm')\n\n    return 'pnpm'\n  }\n\n  if (fs.existsSync(path.resolve(cwd, YARN_LOCK))) {\n    localCache.set(key, 'yarn')\n\n    return 'yarn'\n  }\n\n  if (fs.existsSync(path.resolve(cwd, BUN_LOCK))) {\n    localCache.set(key, 'bun')\n\n    return 'bun'\n  }\n\n  if (fs.existsSync(path.resolve(cwd, NPM_LOCK))) {\n    localCache.set(key, 'npm')\n\n    return 'npm'\n  }\n\n  if (deep) {\n    let dir = cwd\n\n    while (dir !== path.dirname(dir)) {\n      dir = path.dirname(dir)\n\n      if (fs.existsSync(path.resolve(dir, PNPM_LOCK))) {\n        localCache.set(key, 'pnpm')\n\n        return 'pnpm'\n      }\n\n      if (fs.existsSync(path.resolve(dir, YARN_LOCK))) {\n        localCache.set(key, 'yarn')\n\n        return 'yarn'\n      }\n\n      if (fs.existsSync(path.resolve(cwd, BUN_LOCK))) {\n        localCache.set(key, 'bun')\n\n        return 'bun'\n      }\n\n      if (fs.existsSync(path.resolve(dir, NPM_LOCK))) {\n        localCache.set(key, 'npm')\n\n        return 'npm'\n      }\n    }\n  }\n\n  return null\n}\n\n/**\n * Detect the package manager used in the current project.\n *\n * 检测当前项目使用的包管理器\n *\n * @param cwd - Current working directory / 当前工作目录\n * @param deep - Whether to search in parent directories / 是否在父目录中搜索\n *\n * @returns The type of package manager / 包管理器类型\n */\nexport const getPackageManager = (\n  cwd = process.cwd(),\n  deep = true,\n): PackageManager =>\n  getPackageManagerSetting(cwd, deep) ||\n  getTypeofLockFile(cwd, deep) ||\n  (isPackageManagerInstalled('pnpm')\n    ? 'pnpm'\n    : isPackageManagerInstalled('yarn')\n      ? 'yarn'\n      : isPackageManagerInstalled('bun')\n        ? 'bun'\n        : 'npm')\n","import type { ViteBundlerOptions } from '@vuepress/bundler-vite'\nimport type { App } from 'vuepress/core'\nimport { isString } from '../../../shared/index.js'\nimport { getPackageManager } from '../../utils/index.js'\nimport { getBundlerName } from '../getBundlerName.js'\nimport { mergeViteConfig } from './mergeViteConfig.js'\n\n/**\n * Add Vite config\n *\n * 添加 Vite 配置\n *\n * @param bundlerOptions - VuePress Bundler config / VuePress 打包器配置\n * @param app - VuePress Node App / VuePress Node 应用\n * @param config - Vite config / Vite 配置\n */\nexport const addViteConfig = (\n  bundlerOptions: unknown,\n  app: App,\n  config: Record<string, unknown>,\n): void => {\n  if (getBundlerName(app) === 'vite') {\n    const viteBundlerOptions = bundlerOptions as ViteBundlerOptions\n\n    viteBundlerOptions.viteOptions = mergeViteConfig(\n      viteBundlerOptions.viteOptions ?? {},\n      config,\n    )\n  }\n}\n\n/**\n * Add modules to Vite `optimizeDeps.include` list\n *\n * 将模块添加到 Vite `optimizeDeps.include` 列表\n *\n * @param bundlerOptions - VuePress Bundler config / VuePress 打包器配置\n * @param app - VuePress Node App / VuePress Node 应用\n * @param module - Module name(s) to include / 要包含的模块名称\n * @param isDeep - Whether the module is deep dependency / 模块是否为深度依赖\n */\nexport const addViteOptimizeDepsInclude = (\n  bundlerOptions: unknown,\n  app: App,\n  module: string[] | string,\n  isDeep = false,\n): void => {\n  if (\n    getPackageManager() !== 'pnpm' ||\n    // pnpm is not able to optimize deps in tree at first startup\n    ('FORCE_OPTIMIZE_DEPS' in process.env\n      ? Boolean(process.env.FORCE_OPTIMIZE_DEPS)\n      : !isDeep)\n  )\n    addViteConfig(bundlerOptions, app, {\n      optimizeDeps: {\n        include: isString(module) ? [module] : module,\n      },\n    })\n}\n\n/**\n * Add modules to Vite `optimizeDeps.exclude` list\n *\n * 将模块添加到 Vite `optimizeDeps.exclude` 列表\n *\n * @param bundlerOptions - VuePress Bundler config / VuePress 打包器配置\n * @param app - VuePress Node App / VuePress Node 应用\n * @param module - Module name(s) to exclude / 要排除的模块名称\n */\nexport const addViteOptimizeDepsExclude = (\n  bundlerOptions: unknown,\n  app: App,\n  module: string[] | string,\n): void => {\n  addViteConfig(bundlerOptions, app, {\n    optimizeDeps: {\n      exclude: isString(module) ? [module] : module,\n    },\n  })\n}\n\n/**\n * Add modules to Vite `optimizeDeps.needsInterop` list\n *\n * 将模块添加到 Vite `optimizeDeps.needsInterop` 列表\n *\n * @param bundlerOptions - VuePress Bundler config / VuePress 打包器配置\n * @param app - VuePress Node App / VuePress Node 应用\n * @param module - Module name(s) that needs interop / 需要互操作的模块名称\n */\nexport const addViteOptimizeDepsNeedsInterop = (\n  bundlerOptions: unknown,\n  app: App,\n  module: string[] | string,\n): void => {\n  addViteConfig(bundlerOptions, app, {\n    optimizeDeps: {\n      needsInterop: isString(module) ? [module] : module,\n    },\n  })\n}\n\n/**\n * Add modules to Vite `ssr.external` list\n *\n * 将模块添加到 Vite `ssr.external` 列表\n *\n * @param bundlerOptions - VuePress Bundler config / VuePress 打包器配置\n * @param app - VuePress Node App / VuePress Node 应用\n * @param module - Module name(s) to externalize / 要外部化的模块名称\n */\nexport const addViteSsrExternal = (\n  bundlerOptions: unknown,\n  app: App,\n  module: string[] | string,\n): void => {\n  addViteConfig(bundlerOptions, app, {\n    ssr: {\n      external: isString(module) ? [module] : module,\n    },\n  })\n}\n\n/**\n * Add modules to Vite `ssr.noExternal` list\n *\n * 将模块添加到 Vite `ssr.noExternal` 列表\n *\n * @param bundlerOptions - VuePress Bundler config / VuePress 打包器配置\n * @param app - VuePress Node App / VuePress Node 应用\n * @param module - Module name(s) to not externalize / 不要外部化的模块名称\n */\nexport const addViteSsrNoExternal = (\n  bundlerOptions: unknown,\n  app: App,\n  module: string[] | string,\n): void => {\n  addViteConfig(bundlerOptions, app, {\n    ssr: {\n      noExternal: isString(module) ? [module] : module,\n    },\n  })\n}\n","import type { IncomingMessage, ServerResponse } from 'node:http'\nimport type { ViteBundlerOptions } from '@vuepress/bundler-vite'\nimport type {\n  WebpackBundlerOptions,\n  WebpackDevServer,\n} from '@vuepress/bundler-webpack'\nimport type { HandleFunction } from 'connect'\nimport type { Plugin } from 'vite'\nimport type { App } from 'vuepress/core'\nimport { removeLeadingSlash } from 'vuepress/shared'\nimport { getBundlerName } from './getBundlerName.js'\nimport { mergeViteConfig } from './vite/index.js'\n\n/**\n * Options for customizing VuePress Dev Server\n */\nexport interface DevServerOptions {\n  /**\n   * Path to be responded\n   */\n  path: string\n  /**\n   * Respond handler\n   */\n  response: (\n    request: IncomingMessage,\n    response: ServerResponse,\n  ) => Promise<Buffer | string>\n\n  /**\n   * error msg\n   */\n  errMsg?: string\n}\n\n/**\n * Handle specific path when running VuePress Dev Server\n *\n * 在运行 VuePress 开发服务器时处理特定路径\n *\n * @param bundlerOptions - VuePress Bundler config / VuePress 打包器配置\n * @param app - VuePress Node App / VuePress Node 应用\n * @param options - Dev server options / 开发服务器选项\n */\nexport const customizeDevServer = (\n  bundlerOptions: unknown,\n  app: App,\n  {\n    errMsg = 'The server encountered an error',\n    response: responseHandler,\n    path,\n  }: DevServerOptions,\n): void => {\n  const { base } = app.siteData\n  const bundlerName = getBundlerName(app)\n\n  // in dev\n  if (app.env.isDev) {\n    // for vite\n    if (bundlerName === 'vite') {\n      const viteBundlerOptions = bundlerOptions as ViteBundlerOptions\n      const handler: HandleFunction = (\n        request: IncomingMessage,\n        response: ServerResponse,\n      ) => {\n        responseHandler(request, response)\n          .then((data) => {\n            response.statusCode = 200\n            response.end(data)\n          })\n          .catch(() => {\n            response.statusCode = 500\n            response.end(errMsg)\n          })\n      }\n\n      const viteMockRequestPlugin: Plugin = {\n        name: `virtual:dev-server-mock/${path}`,\n        configureServer: ({ middlewares }) => {\n          middlewares.use(`${base}${removeLeadingSlash(path)}`, handler)\n        },\n      }\n\n      viteBundlerOptions.viteOptions = mergeViteConfig(\n        viteBundlerOptions.viteOptions ?? {},\n        { plugins: [viteMockRequestPlugin] },\n      )\n    }\n\n    // for webpack\n    else if (bundlerName === 'webpack') {\n      const webpackBundlerOptions = bundlerOptions as WebpackBundlerOptions\n\n      const { devServerSetupMiddlewares } = webpackBundlerOptions\n\n      webpackBundlerOptions.devServerSetupMiddlewares = (\n        middlewares: WebpackDevServer.Middleware[],\n        server: WebpackDevServer,\n      ): WebpackDevServer.Middleware[] => {\n        server.app?.get(\n          `${base}${removeLeadingSlash(path)}`,\n          (request, response) => {\n            responseHandler(request, response)\n              .then((data) => response.status(200).send(data))\n              .catch(() => response.status(500).send(errMsg))\n          },\n        )\n\n        return devServerSetupMiddlewares\n          ? devServerSetupMiddlewares(middlewares, server)\n          : middlewares\n      }\n    }\n  }\n}\n","import type {\n  WebpackBundlerOptions,\n  WebpackChainConfig,\n} from '@vuepress/bundler-webpack'\nimport type { App } from 'vuepress/core'\nimport { getBundlerName } from '../getBundlerName.js'\n\n/**\n * Chain webpack\n *\n * 链式配置 webpack\n *\n * @param bundlerOptions - VuePress Bundler config / VuePress 打包器配置\n * @param app - VuePress Node App / VuePress Node 应用\n * @param chain - Chain function / 链式配置函数\n */\nexport const chainWebpack = (\n  bundlerOptions: unknown,\n  app: App,\n  chain: (\n    config: WebpackChainConfig,\n    isServer: boolean,\n    isBuild: boolean,\n  ) => void,\n): void => {\n  if (getBundlerName(app) === 'webpack') {\n    const webpackBundlerOptions = bundlerOptions as WebpackBundlerOptions\n    const { chainWebpack: originalChainWebpack } = webpackBundlerOptions\n\n    webpackBundlerOptions.chainWebpack = (config, isServer, isBuild): void => {\n      originalChainWebpack?.(config, isServer, isBuild)\n      chain(config, isServer, isBuild)\n    }\n  }\n}\n","import type {\n  WebpackBundlerOptions,\n  WebpackConfiguration,\n} from '@vuepress/bundler-webpack'\nimport type { App } from 'vuepress/core'\nimport { getBundlerName } from '../getBundlerName.js'\n\n/**\n * Configure webpack options\n *\n * 配置 webpack 选项\n *\n * @param bundlerOptions - VuePress Bundler config / VuePress 打包器配置\n * @param app - VuePress Node App / VuePress Node 应用\n * @param configureWebpack - Function to configure webpack / 配置 webpack 的函数\n */\nexport const configWebpack = (\n  bundlerOptions: unknown,\n  app: App,\n  configureWebpack: (\n    config: WebpackConfiguration,\n    isServer: boolean,\n    isBuild: boolean,\n  ) => void,\n): void => {\n  if (getBundlerName(app) === 'webpack') {\n    const webpackBundlerOptions = bundlerOptions as WebpackBundlerOptions\n    const { configureWebpack: originalConfigWebpack } = webpackBundlerOptions\n\n    webpackBundlerOptions.configureWebpack = (\n      config,\n      isServer,\n      isBuild,\n    ): WebpackConfiguration | void => {\n      const result = originalConfigWebpack?.(config, isServer, isBuild)\n\n      configureWebpack(config, isServer, isBuild)\n\n      return result\n    }\n  }\n}\n","import type { App } from 'vuepress'\nimport type { LocaleConfig, LocaleData } from 'vuepress/shared'\nimport type { ExactLocaleConfig } from '../../shared/index.js'\nimport { deepAssign, fromEntries } from '../../shared/index.js'\nimport { Logger } from '../utils/index.js'\nimport type { DefaultLocaleInfo } from './types.js'\n\n/**\n * Get locale info\n *\n * 获取本地化信息\n *\n * @param app - VuePress App / VuePress 应用\n * @param logger - Logger / 日志记录器\n *\n * @returns Array of locale path and language pairs / 本地化路径和语言对的数组\n */\nexport const getLocaleInfo = (\n  app: App,\n  logger?: Logger,\n): [localePath: string, lang: string][] => {\n  const localeEntries = Object.entries(app.options.locales)\n\n  if (!localeEntries.length) return [['/', app.options.lang]]\n\n  return localeEntries.map(([path, { lang }]) => {\n    if (lang) return [path, lang]\n\n    if (app.options.debug) {\n      ;(logger ?? console).warn(\n        `Locale ${path} is missing lang config, fallback to root lang ${app.options.lang}`,\n      )\n    }\n\n    return [path, app.options.lang]\n  })\n}\n\nexport const getLocaleData = <T extends LocaleData>(\n  info: DefaultLocaleInfo<T>,\n  lang: string,\n  logger?: Logger,\n): T => {\n  const isShortLang = !lang.includes('-')\n\n  // full search\n  const localeData = info.find(([langs]) => langs.includes(lang))\n\n  // find exact match\n  if (localeData) return localeData[1]\n\n  if (!isShortLang) {\n    // find short lang match\n    const shortLang = lang.split('-')[0]\n\n    const shortLocaleData = info.find(([langs]) => langs.includes(shortLang))\n\n    if (shortLocaleData) return shortLocaleData[1]\n  }\n\n  ;(logger ?? console).warn(`${lang} is missing it's i18n config`)\n\n  return (\n    // en-US\n    (info.find(([langs]) => langs.includes('en-US')) ??\n      // en\n      info.find(([langs]) => langs.some((item) => item.startsWith('en'))) ??\n      // first one\n      info[0])[1]\n  )\n}\n\nexport interface GetLocaleConfigOption<T extends LocaleData> {\n  /** VuePress Node app */\n  app: App\n  /** Default locale config */\n  default: DefaultLocaleInfo<T>\n  /** user locale config */\n  config?: LocaleConfig<T> | undefined\n  /** plugin name */\n  name?: string\n}\n\n/**\n * Get final locale config for client\n *\n * 获取客户端的最终本地化配置\n *\n * @param options - Configuration options / 配置选项\n *\n * @returns Final locale config / 最终本地化配置\n */\nexport const getFullLocaleConfig = <T extends LocaleData>({\n  app,\n  name,\n  default: defaultLocaleData,\n  config: userLocalesConfig = {},\n}: GetLocaleConfigOption<T>): ExactLocaleConfig<T> => {\n  const logger = new Logger(name)\n  const localeInfo = getLocaleInfo(app, logger)\n\n  return fromEntries(\n    localeInfo.map<[string, T]>(([localePath, lang]) => [\n      localePath,\n      deepAssign(\n        {},\n        getLocaleData(defaultLocaleData, lang, logger),\n        (userLocalesConfig[localePath] ?? {}) as T,\n      ),\n    ]),\n  )\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\nimport { isHTMLTag, isMathMLTag, isSVGTag } from '@vue/shared'\nimport { load } from 'cheerio'\nimport type { AnyNode, Element } from 'domhandler'\nimport matter from 'gray-matter'\nimport type { App, Page } from 'vuepress/core'\nimport { isLinkHttp, removeEndingSlash } from 'vuepress/shared'\nimport { isArray, isLinkAbsolute, startsWith } from '../../shared/index.js'\n\nconst HEADING_TAGS = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n\ninterface NodeOptions\n  extends Required<\n    Pick<PageExcerptOptions, 'isCustomElement' | 'keepFenceDom'>\n  > {\n  base: string\n}\n\nconst handleNode = (\n  node: AnyNode,\n  { base, isCustomElement, keepFenceDom }: NodeOptions,\n): AnyNode | null => {\n  if (node.type === 'tag') {\n    // image using relative urls shall be dropped\n    if (node.tagName === 'img') {\n      const { src } = node.attribs\n\n      // this is not a resolvable image link\n      if (!isLinkHttp(src) && !isLinkAbsolute(src)) return null\n    }\n\n    // toc should be dropped\n    if (\n      [node.attribs.class, node.attribs.id].some((item) =>\n        ['table-of-contents', 'toc'].includes(item),\n      )\n    )\n      return null\n\n    // standard tags can be returned\n    if (\n      isHTMLTag(node.tagName) ||\n      isSVGTag(node.tagName) ||\n      isMathMLTag(node.tagName)\n    ) {\n      // handing heading tags\n      if (HEADING_TAGS.includes(node.tagName)) {\n        // remove heading id tabindex\n        delete node.attribs.id\n        delete node.attribs.tabindex\n\n        // extract heading tags and remove anchor\n        if (\n          node.children.length === 1 &&\n          node.children[0].type === 'tag' &&\n          node.children[0].tagName === 'a' &&\n          node.children[0].attribs.class === 'header-anchor'\n        )\n          node.children = (node.children[0].children[0] as Element).children\n      }\n\n      if (\n        node.tagName === 'div' &&\n        startsWith(node.attribs.class, 'language-')\n      ) {\n        const pre = node.children.find(\n          (childNode) =>\n            childNode.type === 'tag' &&\n            childNode.tagName === 'pre' &&\n            startsWith(childNode.attribs.class, 'language-'),\n        )\n\n        if (\n          // we are sure this is a code fence\n          pre &&\n          !keepFenceDom\n        ) {\n          node.attribs.class = node.attribs.class.replace(\n            ' line-numbers-mode',\n            '',\n          )\n          node.children = [pre]\n        }\n      }\n\n      // remove `v-pre` attribute on code\n      if (node.tagName === 'code' || node.tagName === 'pre')\n        delete node.attribs['v-pre']\n\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      node.children = handleNodes(node.children, {\n        base,\n        isCustomElement,\n        keepFenceDom,\n      })\n\n      return node\n    }\n\n    // we shall convert `<RouteLink>` and `<RouterLink>` to `<a>` tag\n    if (node.tagName === 'routelink' || node.tagName === 'routerlink') {\n      node.tagName = 'a'\n      node.attribs.href = `${removeEndingSlash(base)}${node.attribs.to}`\n      node.attribs.target = '_blank'\n      delete node.attribs.to\n\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      node.children = handleNodes(node.children, {\n        base,\n        isCustomElement,\n        keepFenceDom,\n      })\n\n      return node\n    }\n\n    // keep custom element as is\n    if (isCustomElement(node.tagName)) return node\n\n    // other tags are considered as vue components and dropped\n    return null\n  }\n\n  return node\n}\n\nconst handleNodes = (\n  nodes: AnyNode[] | null,\n  { base, isCustomElement, keepFenceDom }: NodeOptions,\n): AnyNode[] =>\n  isArray(nodes)\n    ? nodes\n        .map((node) =>\n          handleNode(node, {\n            base,\n            isCustomElement,\n            keepFenceDom,\n          }),\n        )\n        .filter((node): node is AnyNode => node !== null)\n    : []\n\nconst $ = load('')\n\nconst isH1Tag = (node: AnyNode): boolean =>\n  node.type === 'tag' && node.tagName === 'h1'\n\n/**\n * Get raw content of excerpt from page content\n *\n * 从页面内容中获取摘要的原始内容\n *\n * @param content - Raw content of page / 页面的原始内容\n * @param separator - Excerpt separator / 摘要分隔符\n *\n * @returns Raw content of excerpt / 摘要的原始内容\n */\nexport const getPageRawExcerpt = (\n  content: string,\n  separator = '<!-- more -->',\n): string | undefined =>\n  matter(content, {\n    excerpt: true,\n    excerpt_separator: separator,\n  }).excerpt\n\n/**\n * Options for `getPageExcerpt`\n */\nexport interface PageExcerptOptions {\n  /**\n   * Excerpt separator\n   *\n   * 摘要分隔符\n   *\n   * @default \"<!-- more -->\"\n   */\n  separator?: string\n\n  /**\n   * Length of excerpt\n   *\n   * @description Excerpt length will be the minimal possible length reaching this value\n   *\n   * 摘要的长度\n   *\n   * @description 摘要的长度会尽可能的接近这个值\n   *\n   * @default 300\n   */\n  length?: number\n\n  /**\n   * Tags which is considered as custom elements\n   *\n   * @description This is used to determine whether a tag is a custom element since all unknown tags are removed in excerpt.\n   *\n   * 被认为是自定义元素的标签\n   *\n   * @description 用于判断一个标签是否是自定义元素，因为在摘要中，所有的未知标签都会被移除。\n   */\n  isCustomElement?: (tagName: string) => boolean\n\n  /**\n   * Whether keep page title (first h1) in excerpt\n   *\n   * 是否保留页面标题 (第一个 h1)\n   *\n   * @default false\n   */\n  keepPageTitle?: boolean\n\n  /**\n   * Whether preserve tags like line numbers and highlight lines for code blocks\n   *\n   * 是否保留代码块的标签，诸如行号和高亮行\n   *\n   * @default false\n   */\n  keepFenceDom?: boolean\n}\n\n/**\n * Get excerpt content of a page\n *\n * 获取页面的摘要内容\n *\n * @param app - VuePress App / VuePress 应用\n * @param page - VuePress Page / VuePress 页面\n * @param excerptOptions - Excerpt behavior options / 摘要行为选项\n *\n * @returns Page excerpt / 页面摘要\n */\nexport const getPageExcerpt = (\n  { markdown, options: { base } }: App,\n  { content, contentRendered, filePath, filePathRelative, frontmatter }: Page,\n  {\n    isCustomElement = (): boolean => false,\n    separator = '<!-- more -->',\n    length = 300,\n    keepPageTitle = false,\n    keepFenceDom = false,\n  }: PageExcerptOptions = {},\n): string => {\n  // get page content\n  const rawExcerpt = getPageRawExcerpt(content, separator)\n\n  if (rawExcerpt) {\n    const renderedContent = markdown.render(\n      rawExcerpt,\n      // markdown env\n      {\n        base,\n        filePath,\n        filePathRelative,\n        frontmatter: { ...frontmatter },\n      },\n    )\n\n    const rootNodes = renderedContent ? $.parseHTML(renderedContent) : []\n\n    if (rootNodes[0] && !keepPageTitle && isH1Tag(rootNodes[0]))\n      rootNodes.shift()\n\n    return $.html(\n      handleNodes(rootNodes, {\n        base,\n        isCustomElement,\n        keepFenceDom,\n      }),\n    )\n  }\n\n  if (length > 0) {\n    let autoExcerpt = ''\n\n    const rootNodes = contentRendered ? $.parseHTML(contentRendered) : []\n\n    if (rootNodes[0] && !keepPageTitle && isH1Tag(rootNodes[0]))\n      rootNodes.shift()\n\n    for (const node of rootNodes) {\n      const resolvedNode = handleNode(node, {\n        base,\n        isCustomElement,\n        keepFenceDom,\n      })\n\n      if (resolvedNode) {\n        autoExcerpt += $.html(resolvedNode)\n        if (autoExcerpt.length >= length) break\n      }\n    }\n\n    return autoExcerpt\n  }\n\n  return ''\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\nimport { isHTMLTag } from '@vue/shared'\nimport { load } from 'cheerio'\nimport type { AnyNode } from 'domhandler'\nimport type { App, Page } from 'vuepress/core'\nimport {} from 'vuepress/shared'\nimport { isArray } from '../../shared/index.js'\n\nconst MEDIA_WITH_ALT = ['img']\n\nconst REMOVED_TAGS = [\n  // non content\n  'title',\n  'base',\n  'meta',\n  'template',\n  'script',\n  'style',\n  'canvas',\n  'slot',\n\n  // not main content\n  'nav',\n  'aside',\n  'footer',\n\n  // deleted\n  'del',\n  's',\n\n  // rich media\n  'audio',\n  'video',\n  'canvas',\n  'iframe',\n  'map',\n  'area',\n  'track',\n  'object',\n\n  // input\n  'input',\n  'textarea',\n  'select',\n  'option',\n  'optgroup',\n  'datalist',\n]\n\ninterface NodeOptions {\n  base: string\n  removedTags: string[]\n}\n\nconst handleNode = (\n  node: AnyNode,\n  { base, removedTags }: NodeOptions,\n): string => {\n  if (node.type === 'tag') {\n    // toc should be dropped\n    if (\n      [node.attribs.class, node.attribs.id].some((item) =>\n        ['table-of-contents', 'toc'].includes(item),\n      )\n    )\n      return ''\n\n    // return alt text\n    if (MEDIA_WITH_ALT.includes(node.tagName)) {\n      return node.attribs.alt || ''\n    }\n\n    // html tags can be returned\n    if (\n      !REMOVED_TAGS.includes(node.tagName) &&\n      !removedTags.includes(node.tagName) &&\n      isHTMLTag(node.tagName)\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      return handleNodes(node.children, { base, removedTags })\n    }\n\n    return ''\n  }\n\n  if (node.type === 'text') return node.data\n\n  return ''\n}\n\nconst handleNodes = (\n  nodes: AnyNode[] | null,\n  { base, removedTags }: NodeOptions,\n): string =>\n  isArray(nodes)\n    ? nodes.map((node) => handleNode(node, { base, removedTags })).join('')\n    : ''\n\nconst $ = load('')\n\nexport interface PageTextOptions {\n  /**\n   * Whether convert text to single line content\n   *\n   * 是否将文字转换成单行内容\n   *\n   * @default false\n   */\n  singleLine?: boolean\n\n  /**\n   * Length of text\n   *\n   * @description Text length will be the minimal possible length reaching this value\n   *\n   * 文字的长度\n   *\n   * @description 文字的长度会尽可能的接近这个值\n   *\n   * @default 300\n   */\n  length?: number\n\n  /**\n   * Tags to be removed\n   *\n   * @description Table and code blocks are removed by default.\n   *\n   * 需要移除的标签\n   *\n   * @description 默认情况下表格和代码块会被移除\n   *\n   * @default ['table', 'pre']\n   */\n  removedTags?: string[]\n}\n\n/**\n * Get plain text from html content\n *\n * 从 HTML 内容中获取纯文本\n *\n * @param html - HTML content / HTML 内容\n * @param base - Base url of site / 站点的基础 URL\n * @param options - Options for getting text / 获取文本的选项\n *\n * @returns Plain text content / 纯文本内容\n */\nexport const getText = (\n  html: string,\n  base: string,\n  {\n    length = 300,\n    singleLine,\n    removedTags = ['table', 'pre'],\n  }: PageTextOptions = {},\n): string => {\n  let result = ''\n  const rootNodes = html ? $.parseHTML(html) : []\n\n  for (const node of rootNodes) {\n    const text = handleNode(node, { base, removedTags })\n\n    if (text) {\n      result += text\n      if (text.length >= length) break\n    }\n  }\n  return (\n    singleLine ? result.replace(/\\n/g, ' ').replace(/\\s+/g, ' ') : result\n  ).trim()\n}\n\n/**\n * Get plain text of page content\n *\n * 获取页面内容的纯文本\n *\n * @param app - VuePress App / VuePress 应用\n * @param page - VuePress Page / VuePress 页面\n * @param options - Options for getting text / 获取文本的选项\n *\n * @returns Plain text of page content / 页面内容的纯文本\n */\nexport const getPageText = (\n  { options: { base } }: App,\n  {\n    contentRendered,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  }: Page<Record<string, any>, Record<string, any>, Record<string, any>>,\n  options: PageTextOptions = {},\n): string => getText(contentRendered, base, options)\n"],"names":["isDef","val","isBoolean","isNumber","isArray","isRegExp","startsWith","str","prefix","isString","endsWith","suffix","entries","fromEntries","keys","values","deepAssign","originObject","overrideObjects","assignObject","property","value","isPlainObject","getDate","input","date","dateSorter","valueA","valueB","dateA","dateB","isLinkAbsolute","test","isLinkRelative","link","isLinkExternal","isLinkWithProtocol","getBundlerName","app","name","addCustomElement","bundlerOptions","customElement","customElements","bundlerName","viteBundlerConfig","isCustomElement","tag","webpackBundlerConfig","isObject","arraify","target","normalizeSingleAlias","find","replacement","customResolver","alias","normalizeAlias","aliasOption","mergeAlias","defaults","overrides","backwardCompatibleWorkerPlugins","plugins","mergeConfigRecursively","merged","rootPath","key","existing","mergeViteConfig","isRoot","encodeData","data","level","buffer","strToU8","zipped","zlibSync","binary","strFromU8","decodeData","base64","unzlibSync","isModuleAvailable","module","meta","getModulePath","path","fileURLToPath","Logger","text","ora","colors","msg","instance","args","globalCache","localCache","PACKAGE_CONFIG","NPM_LOCK","YARN_LOCK","PNPM_LOCK","BUN_LOCK","isInstalled","packageManager","spawnSync","isPackageManagerInstalled","status","getPackageManagerSetting","cwd","deep","fs","packageManagerSettings","dir","getTypeofLockFile","getPackageManager","addViteConfig","config","viteBundlerOptions","addViteOptimizeDepsInclude","isDeep","addViteOptimizeDepsExclude","addViteOptimizeDepsNeedsInterop","addViteSsrExternal","addViteSsrNoExternal","customizeDevServer","errMsg","responseHandler","base","handler","request","response","viteMockRequestPlugin","middlewares","removeLeadingSlash","webpackBundlerOptions","devServerSetupMiddlewares","server","chainWebpack","chain","originalChainWebpack","isServer","isBuild","configWebpack","configureWebpack","originalConfigWebpack","result","getLocaleInfo","logger","localeEntries","lang","getLocaleData","info","isShortLang","localeData","langs","shortLang","shortLocaleData","item","getFullLocaleConfig","defaultLocaleData","userLocalesConfig","localeInfo","localePath","HEADING_TAGS","handleNode","node","keepFenceDom","src","isLinkHttp","isHTMLTag","isSVGTag","isMathMLTag","pre","childNode","handleNodes","removeEndingSlash","nodes","$","load","isH1Tag","getPageRawExcerpt","content","separator","matter","getPageExcerpt","markdown","contentRendered","filePath","filePathRelative","frontmatter","length","keepPageTitle","rawExcerpt","renderedContent","rootNodes","autoExcerpt","resolvedNode","MEDIA_WITH_ALT","REMOVED_TAGS","removedTags","getText","html","singleLine","getPageText","options"],"mappings":"sxBAuBO,MAAMA,GAAkBC,GAAsB,OAAOA,EAAQ,IAmBvDC,GAAaD,GAA6B,OAAOA,GAAQ,UAmBzDE,GAAYF,GAA4B,OAAOA,GAAQ,SAOvD,CAAE,QAAAG,CAAQ,EAAI,MAiBdC,GAAYJ,GAAgCA,aAAe,OAqB3DK,EAAa,CAACC,EAAcC,IACvCC,EAASF,CAAG,GAAKA,EAAI,WAAWC,CAAM,EAmB3BE,EAAW,CAACH,EAAcI,IACrCF,EAASF,CAAG,GAAKA,EAAI,SAASI,CAAM,EAUzB,CAAE,QAAAC,CAAQ,EAAI,OACd,CAAE,YAAAC,CAAY,EAAI,OAClB,CAAE,KAAAC,CAAK,EAAI,OACX,CAAE,OAAAC,EAAO,EAAI,OCtHbC,EAAa,CAMxBC,KACGC,IACG,CACN,GAAIA,EAAgB,SAAW,EAAG,OAAOD,EAGzC,MAAME,EAAeD,EAAgB,QAErC,OAAIC,GACFP,EAAQO,CAAY,EAAE,QAAQ,CAAC,CAACC,EAAUC,CAAK,IAAM,CAC/CD,IAAa,aAAeA,IAAa,gBACzCE,EAAcL,EAAaG,CAAQ,CAAC,GAAKE,EAAcD,CAAK,EAC9DL,EAAWC,EAAaG,CAAQ,EAAGC,CAAK,EACjCjB,EAAQiB,CAAK,EACnBJ,EAA4BG,CAAQ,EAAI,CAAC,GAAIC,CAAmB,EAC1DC,EAAcD,CAAK,EACzBJ,EAA4BG,CAAQ,EAAI,CACvC,GAAGC,CACL,EAECJ,EAA4BG,CAAQ,EAAID,EACvCC,CACF,EACJ,CAAC,EAEIJ,EAAWC,EAAc,GAAGC,CAAe,CACpD,ECtCaK,EAAWC,GAAgC,CACtD,GAAIA,EAAO,CACT,GAAI,OAAOA,GAAU,SAAU,OAAO,IAAI,KAAKA,CAAK,EAGpD,MAAMC,EAAO,KAAK,MAAMD,EAAM,UAAU,EAExC,GAAI,CAAC,OAAO,MAAMC,CAAI,EAAG,OAAO,IAAI,KAAKA,CAAI,CAC/C,CAEA,OAAO,IACT,EAkBaC,GAAa,CACxBC,EACAC,IACW,CACX,MAAMC,EAAQN,EAAQ,OAAOI,GAAW,SAAW,IAAI,KAAKA,CAAM,EAAIA,CAAM,EACtEG,EAAQP,EAAQ,OAAOK,GAAW,SAAW,IAAI,KAAKA,CAAM,EAAIA,CAAM,EAE5E,OAAKC,EACAC,EAEEA,EAAM,QAAA,EAAYD,EAAM,QAAA,EAFZ,GADAC,EAAQ,EAAI,CAIjC,ECnCaC,EAAkBC,GAC7B1B,EAAW0B,EAAM,GAAG,GAAMA,EAAgB,CAAC,IAAM,IAkBtCC,GAAkBC,GAC7B,CAACC,GAAeD,CAAI,GAAK,CAACE,GAAmBF,CAAI,ECtBtCG,EAAkBC,GAAqB,CAClD,KAAM,CAAE,KAAAC,CAAK,EAAID,EAAI,QAAQ,QAE7B,OAAOC,EAAK,MAAM,2BAA2B,IAAI,CAAC,GAAKA,CACzD,ECIaC,GAAmB,CAC9BC,EACAH,EACAI,IACS,CACT,MAAMC,EAAiBlC,EAASiC,CAAa,EACzC,CAACA,CAAa,EACdA,EACEE,EAAcP,EAAeC,CAAG,EAGtC,GAAIM,IAAgB,OAAQ,CAC1B,MAAMC,EAAoBJ,EAGpB,CAAE,gBAAAK,CAAgB,IAAOD,EAAkB,mBAC/C,CAAA,GAAI,WAAa,IAAI,kBAAoB,CAAA,EAE3CA,EAAkB,iBAAiB,SAAS,gBAAgB,gBACzDE,IAEGJ,aAA0B,OACtBA,EAAe,KAAKI,CAAG,EACvBJ,EAAe,SAASI,CAAG,GAExB,GAEFD,IAAkBC,CAAG,CAElC,SAGSH,IAAgB,UAAW,CAClC,MAAMI,EAAuBP,EAGvB,CAAE,gBAAAK,CAAgB,GAAME,EAAqB,MACjD,CAAA,GAAI,kBAAoB,CAAA,EAE1BA,EAAqB,IAAI,gBAAgB,gBACvCD,IAGEJ,aAA0B,OACtBA,EAAe,KAAKI,CAAG,EACvBJ,EAAe,SAASI,CAAG,GAExB,GAEFD,IAAkBC,CAAG,CAEhC,CACF,ECJME,EAAY5B,GAChB,OAAO,UAAU,SAAS,KAAKA,CAAK,IAAM,kBAEtC6B,EAAcC,GAClB/C,EAAQ+C,CAAM,EAAIA,EAAS,CAACA,CAAM,EAE9BC,EAAuB,CAAC,CAC5B,KAAAC,EACA,YAAAC,EACA,eAAAC,CACF,IAAoB,CACd9C,EAAS4C,CAAI,GAAK3C,EAAS2C,EAAM,GAAG,GAAK3C,EAAS4C,EAAa,GAAG,IACpED,EAAOA,EAAK,MAAM,EAAGA,EAAK,OAAS,CAAC,EACpCC,EAAcA,EAAY,MAAM,EAAGA,EAAY,OAAS,CAAC,GAG3D,MAAME,EAAe,CACnB,KAAAH,EACA,YAAAC,CACF,EAEA,OAAIC,IACFC,EAAM,eAAiBD,GAGlBC,CACT,EAEMC,EAAiB,CAACC,EAA4B,CAAA,IAClDtD,EAAQsD,CAAW,EACfA,EAAY,IAAIN,CAAoB,EACpCtC,EAAK4C,CAAW,EAAE,IAAKL,GACrBD,EAAqB,CACnB,KAAAC,EACA,YAAaK,EAAYL,CAAI,CAC/B,CAAC,CACH,EAEAM,GAAa,CACjBC,EACAC,IAEKD,EACAC,EAEDZ,EAASW,CAAQ,GAAKX,EAASY,CAAS,EAEnC,CAAE,GAAGD,EAAU,GAAGC,CAAU,EAI9B,CAAC,GAAGJ,EAAeI,CAAS,EAAG,GAAGJ,EAAeG,CAAQ,CAAC,EAR1CA,EADDC,EAYlBC,EAAmCC,GACnC,MAAM,QAAQA,CAAO,EAChBA,EAGL,OAAOA,GAAY,WAEdA,IAGF,CAAA,EAGHC,EAAyB,CAC7B,CAAE,GAAGC,CAAO,EACZJ,EACAK,IACwB,CACxB,UAAWC,KAAON,EAAW,CAC3B,MAAMxC,EAAQwC,EAAUM,CAAG,EAE3B,GAAI9C,GAAS,KACX,SAGF,MAAM+C,EAAWH,EAAOE,CAAG,EAE3B,GAAIC,GAAY,KAAM,CACpBH,EAAOE,CAAG,EAAI9C,EACd,QACF,CAGA,GAAI8C,IAAQ,UAAYD,IAAa,WAAaA,IAAa,IAAK,CAClED,EAAOE,CAAG,EAAIR,GAAWS,EAAU/C,CAAK,EACxC,QACF,SAAW8C,IAAQ,iBAAmBD,IAAa,GAAI,CACrDD,EAAOE,CAAG,EAAI,CAAA,EAAG,OAAOC,EAAU/C,CAAK,EACvC,QACF,SACE8C,IAAQ,eACPD,IAAa,OAASA,IAAa,aACnCE,IAAa,IAAQ/C,IAAU,IAChC,CACA4C,EAAOE,CAAG,EAAI,GACd,QACF,SAAWA,IAAQ,WAAaD,IAAa,SAAU,CAErDD,EAAOE,CAAG,EAAI,IAAM,CAClB,GAAGL,EAAgCM,CAAQ,EAC3C,GAAGN,EAAgCzC,CAAK,CAC1C,EACA,QACF,SAAW8C,IAAQ,UAAYD,IAAa,aAAc,CACxDD,EAAOE,CAAG,EAAI9C,EACd,QACF,CAEA,GAAIjB,EAAQgE,CAAQ,GAAKhE,EAAQiB,CAAK,EAAG,CACvC4C,EAAOE,CAAG,EAAI,CAAC,GAAGjB,EAAQkB,CAAQ,EAAG,GAAGlB,EAAQ7B,CAAK,CAAC,EACtD,QACF,CAEA,GAAI4B,EAASmB,CAAQ,GAAKnB,EAAS5B,CAAK,EAAG,CACzC4C,EAAOE,CAAG,EAAIH,EACZI,EACA/C,EACA6C,EAAW,GAAGA,CAAQ,IAAIC,CAAG,GAAKA,CACpC,EACA,QACF,CAEAF,EAAOE,CAAG,EAAI9C,CAChB,CAEA,OAAO4C,CACT,EAaaI,EAAkB,CAC7BT,EACAC,EACAS,EAAS,KAETN,EAAuBJ,EAAUC,EAAWS,EAAS,GAAK,GAAG,EClNlDC,GAAa,CACxBC,EACAC,EAAiC,IACtB,CACX,MAAMC,EAASC,EAAQH,CAAI,EAErBI,EAASC,GAASH,EAAQ,CAAE,MAAAD,CAAM,CAAC,EACnCK,EAASC,EAAUH,EAAQ,EAAI,EAErC,OAAO,OAAO,KAAKE,EAAQ,QAAQ,EAAE,SAAS,QAAQ,CACxD,EAWaE,GAAcC,GAA2B,CACpD,MAAMH,EAAS,OAAO,KAAKG,EAAQ,QAAQ,EAAE,SAAS,QAAQ,EAE9D,OAAOF,EAAUG,GAAWP,EAAQG,EAAQ,EAAI,CAAC,CAAC,CACpD,EC5BaK,GAAoB,CAC/BC,EACAC,IACY,CACZ,GAAI,CACF,OAAID,GAAQC,EAAK,QAAQD,CAAM,EAExB,EACT,MAAQ,CACN,MAAO,EACT,CACF,ECRaE,GAAgB,CAACF,EAAgBC,IAC5CE,EAAK,UAAUC,GAAcH,EAAK,QAAQD,CAAM,CAAC,CAAC,ECJ7C,MAAMK,CAAO,CACX,YAMYlD,EAAO,GACxB,CADiB,KAAA,KAAAA,CAChB,CAEK,KAAKmD,EAAmB,CAC9B,OAAOC,GAAI,CACT,WAAYC,EAAO,KAAK,GAAG,KAAK,IAAI,IAAI,GAAK,GAC7C,KAAAF,CACF,CAAC,CACH,CAWO,KAAKG,EAGV,CACA,MAAMC,EAAW,KAAK,KAAKD,CAAG,EAE9B,MAAO,CACL,QAAUH,GAAkBI,EAAS,QAAQJ,CAAI,EACjD,KAAOA,GAAkBI,EAAS,QAAQJ,CAAI,CAChD,CACF,CAUO,KAAKA,EAAO,MAAOK,EAAuB,CAC/C,KAAK,KAAKH,EAAO,KAAKF,CAAI,CAAC,EAAE,KAAA,EAEzBK,EAAK,QAAQ,QAAQ,KAAK,GAAGA,CAAI,CACvC,CAUO,QAAQL,EAAO,MAAOK,EAAuB,CAClD,KAAK,KAAKH,EAAO,MAAMF,CAAI,CAAC,EAAE,QAAA,EAE1BK,EAAK,QAAQ,QAAQ,IAAI,GAAGA,CAAI,CACtC,CAUO,KAAKL,EAAO,MAAOK,EAAuB,CAC/C,KAAK,KAAKH,EAAO,OAAOF,CAAI,CAAC,EAAE,KAAA,EAE3BK,EAAK,QAAQ,QAAQ,KAAK,GAAGA,CAAI,CACvC,CAUO,MAAML,EAAO,MAAOK,EAAuB,CAChD,KAAK,KAAKH,EAAO,IAAIF,CAAI,CAAC,EAAE,OAExBK,EAAK,QAAQ,QAAQ,MAAM,GAAGA,CAAI,CACxC,CACF,CClGA,MAAMC,EAAc,IAAI,IAClBC,EAAa,IAAI,IAEjBC,EAAiB,eACjBC,EAAW,oBACXC,EAAY,YACZC,EAAY,iBACZC,GAAW,YAEXC,GAAeC,GAA4C,CAC/D,GAAI,CACF,OACEC,GAAU,GAAGD,CAAc,aAAc,CAAE,MAAO,GAAM,MAAO,QAAS,CAAC,EACtE,SAAW,CAElB,MAAQ,CACN,MAAO,EACT,CACF,EAWaE,EACXF,GACY,CACZ,MAAMrC,EAAM,UAAUqC,CAAc,GAE9BG,EAASX,EAAY,IAAI7B,CAAG,EAElC,OAAIwC,IAAW,OAAkBA,EAE7BJ,GAAYC,CAAc,GAC5BR,EAAY,IAAI7B,EAAK,EAAI,EAElB,IAGF,EACT,EAYayC,GAA2B,CACtCC,EAAM,QAAQ,IAAA,EACdC,EAAO,KACmB,CAC1B,MAAM3C,EAAM,WAAW0C,CAAG,GAEpBF,EAASV,EAAW,IAAI9B,CAAG,EAEjC,GAAIwC,IAAW,OAAW,OAAOA,EAEjC,GAAII,EAAG,WAAWxB,EAAK,QAAQsB,EAAKX,CAAc,CAAC,EAAG,CACpD,KAAM,CAAE,eAAgBc,CAAuB,EAAI,KAAK,MACtDD,EAAG,aAAaxB,EAAK,QAAQsB,EAAKX,CAAc,EAAG,OAAO,CAC5D,EAEA,GAAIc,EAAwB,CAC1B,MAAMR,EAAiBQ,EAAuB,MAC5C,GACF,EAAE,CAAC,EAEH,OAAAf,EAAW,IAAI9B,EAAKqC,CAAc,EAE3BA,CACT,CACF,CAEA,GAAIM,EAAM,CACR,IAAIG,EAAMJ,EAEV,KAAOI,IAAQ1B,EAAK,QAAQ0B,CAAG,GAG7B,GAFAA,EAAM1B,EAAK,QAAQ0B,CAAG,EAElBF,EAAG,WAAWxB,EAAK,QAAQsB,EAAKX,CAAc,CAAC,EAAG,CACpD,KAAM,CAAE,eAAgBc,CAAuB,EAAI,KAAK,MACtDD,EAAG,aAAaxB,EAAK,QAAQsB,EAAKX,CAAc,EAAG,OAAO,CAC5D,EAEA,GAAIc,EAAwB,CAC1B,MAAMR,EAAiBQ,EAAuB,MAC5C,GACF,EAAE,CAAC,EAEH,OAAAf,EAAW,IAAI9B,EAAKqC,CAAc,EAE3BA,CACT,CACF,CAEJ,CAEA,OAAO,IACT,EAYaU,GAAoB,CAC/BL,EAAM,QAAQ,MACdC,EAAO,KACmB,CAC1B,MAAM3C,EAAM,SAAS0C,CAAG,GAElBF,EAASV,EAAW,IAAI9B,CAAG,EAEjC,GAAIwC,IAAW,OAAW,OAAOA,EAEjC,GAAII,EAAG,WAAWxB,EAAK,QAAQsB,EAAKR,CAAS,CAAC,EAC5C,OAAAJ,EAAW,IAAI9B,EAAK,MAAM,EAEnB,OAGT,GAAI4C,EAAG,WAAWxB,EAAK,QAAQsB,EAAKT,CAAS,CAAC,EAC5C,OAAAH,EAAW,IAAI9B,EAAK,MAAM,EAEnB,OAGT,GAAI4C,EAAG,WAAWxB,EAAK,QAAQsB,EAAKP,EAAQ,CAAC,EAC3C,OAAAL,EAAW,IAAI9B,EAAK,KAAK,EAElB,MAGT,GAAI4C,EAAG,WAAWxB,EAAK,QAAQsB,EAAKV,CAAQ,CAAC,EAC3C,OAAAF,EAAW,IAAI9B,EAAK,KAAK,EAElB,MAGT,GAAI2C,EAAM,CACR,IAAIG,EAAMJ,EAEV,KAAOI,IAAQ1B,EAAK,QAAQ0B,CAAG,GAAG,CAGhC,GAFAA,EAAM1B,EAAK,QAAQ0B,CAAG,EAElBF,EAAG,WAAWxB,EAAK,QAAQ0B,EAAKZ,CAAS,CAAC,EAC5C,OAAAJ,EAAW,IAAI9B,EAAK,MAAM,EAEnB,OAGT,GAAI4C,EAAG,WAAWxB,EAAK,QAAQ0B,EAAKb,CAAS,CAAC,EAC5C,OAAAH,EAAW,IAAI9B,EAAK,MAAM,EAEnB,OAGT,GAAI4C,EAAG,WAAWxB,EAAK,QAAQsB,EAAKP,EAAQ,CAAC,EAC3C,OAAAL,EAAW,IAAI9B,EAAK,KAAK,EAElB,MAGT,GAAI4C,EAAG,WAAWxB,EAAK,QAAQ0B,EAAKd,CAAQ,CAAC,EAC3C,OAAAF,EAAW,IAAI9B,EAAK,KAAK,EAElB,KAEX,CACF,CAEA,OAAO,IACT,EAYagD,GAAoB,CAC/BN,EAAM,QAAQ,IAAA,EACdC,EAAO,KAEPF,GAAyBC,EAAKC,CAAI,GAClCI,GAAkBL,EAAKC,CAAI,IAC1BJ,EAA0B,MAAM,EAC7B,OACAA,EAA0B,MAAM,EAC9B,OACAA,EAA0B,KAAK,EAC7B,MACA,OCxMGU,EAAgB,CAC3B3E,EACAH,EACA+E,IACS,CACT,GAAIhF,EAAeC,CAAG,IAAM,OAAQ,CAClC,MAAMgF,EAAqB7E,EAE3B6E,EAAmB,YAAcjD,EAC/BiD,EAAmB,aAAe,CAAA,EAClCD,CACF,CACF,CACF,EAYaE,GAA6B,CACxC9E,EACAH,EACA8C,EACAoC,EAAS,KACA,EAEPL,OAAwB,SAEvB,wBAAyB,QAAQ,IACtB,QAAQ,IAAI,oBACpB,CAACK,KAELJ,EAAc3E,EAAgBH,EAAK,CACjC,aAAc,CACZ,QAAS7B,EAAS2E,CAAM,EAAI,CAACA,CAAM,EAAIA,CACzC,CACF,CAAC,CACL,EAWaqC,GAA6B,CACxChF,EACAH,EACA8C,IACS,CACTgC,EAAc3E,EAAgBH,EAAK,CACjC,aAAc,CACZ,QAAS7B,EAAS2E,CAAM,EAAI,CAACA,CAAM,EAAIA,CACzC,CACF,CAAC,CACH,EAWasC,GAAkC,CAC7CjF,EACAH,EACA8C,IACS,CACTgC,EAAc3E,EAAgBH,EAAK,CACjC,aAAc,CACZ,aAAc7B,EAAS2E,CAAM,EAAI,CAACA,CAAM,EAAIA,CAC9C,CACF,CAAC,CACH,EAWauC,GAAqB,CAChClF,EACAH,EACA8C,IACS,CACTgC,EAAc3E,EAAgBH,EAAK,CACjC,IAAK,CACH,SAAU7B,EAAS2E,CAAM,EAAI,CAACA,CAAM,EAAIA,CAC1C,CACF,CAAC,CACH,EAWawC,GAAuB,CAClCnF,EACAH,EACA8C,IACS,CACTgC,EAAc3E,EAAgBH,EAAK,CACjC,IAAK,CACH,WAAY7B,EAAS2E,CAAM,EAAI,CAACA,CAAM,EAAIA,CAC5C,CACF,CAAC,CACH,ECnGayC,GAAqB,CAChCpF,EACAH,EACA,CACE,OAAAwF,EAAS,kCACT,SAAUC,EACV,KAAAxC,CACF,IACS,CACT,KAAM,CAAE,KAAAyC,CAAK,EAAI1F,EAAI,SACfM,EAAcP,EAAeC,CAAG,EAGtC,GAAIA,EAAI,IAAI,OAEV,GAAIM,IAAgB,OAAQ,CAC1B,MAAM0E,EAAqB7E,EACrBwF,EAA0B,CAC9BC,EACAC,IACG,CACHJ,EAAgBG,EAASC,CAAQ,EAC9B,KAAM3D,GAAS,CACd2D,EAAS,WAAa,IACtBA,EAAS,IAAI3D,CAAI,CACnB,CAAC,EACA,MAAM,IAAM,CACX2D,EAAS,WAAa,IACtBA,EAAS,IAAIL,CAAM,CACrB,CAAC,CACL,EAEMM,EAAgC,CACpC,KAAM,2BAA2B7C,CAAI,GACrC,gBAAiB,CAAC,CAAE,YAAA8C,CAAY,IAAM,CACpCA,EAAY,IAAI,GAAGL,CAAI,GAAGM,EAAmB/C,CAAI,CAAC,GAAI0C,CAAO,CAC/D,CACF,EAEAX,EAAmB,YAAcjD,EAC/BiD,EAAmB,aAAe,CAAA,EAClC,CAAE,QAAS,CAACc,CAAqB,CAAE,CACrC,CACF,SAGSxF,IAAgB,UAAW,CAClC,MAAM2F,EAAwB9F,EAExB,CAAE,0BAAA+F,CAA0B,EAAID,EAEtCA,EAAsB,0BAA4B,CAChDF,EACAI,KAEAA,EAAO,KAAK,IACV,GAAGT,CAAI,GAAGM,EAAmB/C,CAAI,CAAC,GAClC,CAAC2C,EAASC,IAAa,CACrBJ,EAAgBG,EAASC,CAAQ,EAC9B,KAAM3D,GAAS2D,EAAS,OAAO,GAAG,EAAE,KAAK3D,CAAI,CAAC,EAC9C,MAAM,IAAM2D,EAAS,OAAO,GAAG,EAAE,KAAKL,CAAM,CAAC,CAClD,CACF,EAEOU,EACHA,EAA0BH,EAAaI,CAAM,EAC7CJ,EAER,EAEJ,EClGaK,GAAe,CAC1BjG,EACAH,EACAqG,IAKS,CACT,GAAItG,EAAeC,CAAG,IAAM,UAAW,CACrC,MAAMiG,EAAwB9F,EACxB,CAAE,aAAcmG,CAAqB,EAAIL,EAE/CA,EAAsB,aAAe,CAAClB,EAAQwB,EAAUC,IAAkB,CACxEF,IAAuBvB,EAAQwB,EAAUC,CAAO,EAChDH,EAAMtB,EAAQwB,EAAUC,CAAO,CACjC,CACF,CACF,EClBaC,GAAgB,CAC3BtG,EACAH,EACA0G,IAKS,CACT,GAAI3G,EAAeC,CAAG,IAAM,UAAW,CACrC,MAAMiG,EAAwB9F,EACxB,CAAE,iBAAkBwG,CAAsB,EAAIV,EAEpDA,EAAsB,iBAAmB,CACvClB,EACAwB,EACAC,IACgC,CAChC,MAAMI,EAASD,IAAwB5B,EAAQwB,EAAUC,CAAO,EAEhE,OAAAE,EAAiB3B,EAAQwB,EAAUC,CAAO,EAEnCI,CACT,CACF,CACF,ECxBaC,GAAgB,CAC3B7G,EACA8G,IACyC,CACzC,MAAMC,EAAgB,OAAO,QAAQ/G,EAAI,QAAQ,OAAO,EAExD,OAAK+G,EAAc,OAEZA,EAAc,IAAI,CAAC,CAAC9D,EAAM,CAAE,KAAA+D,CAAK,CAAC,IACnCA,EAAa,CAAC/D,EAAM+D,CAAI,GAExBhH,EAAI,QAAQ,QACZ8G,GAAU,SAAS,KACnB,UAAU7D,CAAI,kDAAkDjD,EAAI,QAAQ,IAAI,EAClF,EAGK,CAACiD,EAAMjD,EAAI,QAAQ,IAAI,EAC/B,EAZiC,CAAC,CAAC,IAAKA,EAAI,QAAQ,IAAI,CAAC,CAa5D,EAEaiH,GAAgB,CAC3BC,EACAF,EACAF,IACM,CACN,MAAMK,EAAc,CAACH,EAAK,SAAS,GAAG,EAGhCI,EAAaF,EAAK,KAAK,CAAC,CAACG,CAAK,IAAMA,EAAM,SAASL,CAAI,CAAC,EAG9D,GAAII,EAAY,OAAOA,EAAW,CAAC,EAEnC,GAAI,CAACD,EAAa,CAEhB,MAAMG,EAAYN,EAAK,MAAM,GAAG,EAAE,CAAC,EAE7BO,EAAkBL,EAAK,KAAK,CAAC,CAACG,CAAK,IAAMA,EAAM,SAASC,CAAS,CAAC,EAExE,GAAIC,EAAiB,OAAOA,EAAgB,CAAC,CAC/C,CAEC,OAACT,GAAU,SAAS,KAAK,GAAGE,CAAI,8BAA8B,GAI5DE,EAAK,KAAK,CAAC,CAACG,CAAK,IAAMA,EAAM,SAAS,OAAO,CAAC,GAE7CH,EAAK,KAAK,CAAC,CAACG,CAAK,IAAMA,EAAM,KAAMG,GAASA,EAAK,WAAW,IAAI,CAAC,CAAC,GAElEN,EAAK,CAAC,GAAG,CAAC,CAEhB,EAsBaO,GAAsB,CAAuB,CACxD,IAAAzH,EACA,KAAAC,EACA,QAASyH,EACT,OAAQC,EAAoB,CAAA,CAC9B,IAAsD,CACpD,MAAMb,EAAS,IAAI3D,EAAOlD,CAAI,EACxB2H,EAAaf,GAAc7G,EAAK8G,CAAM,EAE5C,OAAOvI,EACLqJ,EAAW,IAAiB,CAAC,CAACC,EAAYb,CAAI,IAAM,CAClDa,EACAnJ,EACE,CAAA,EACAuI,GAAcS,EAAmBV,EAAMF,CAAM,EAC5Ca,EAAkBE,CAAU,GAAK,EACpC,CACF,CAAC,CACH,CACF,ECtGMC,GAAe,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EASlDC,GAAa,CACjBC,EACA,CAAE,KAAAtC,EAAM,gBAAAlF,EAAiB,aAAAyH,CAAa,IACnB,CACnB,GAAID,EAAK,OAAS,MAAO,CAEvB,GAAIA,EAAK,UAAY,MAAO,CAC1B,KAAM,CAAE,IAAAE,CAAI,EAAIF,EAAK,QAGrB,GAAI,CAACG,GAAWD,CAAG,GAAK,CAACzI,EAAeyI,CAAG,EAAG,OAAO,IACvD,CAGA,GACE,CAACF,EAAK,QAAQ,MAAOA,EAAK,QAAQ,EAAE,EAAE,KAAMR,GAC1C,CAAC,oBAAqB,KAAK,EAAE,SAASA,CAAI,CAC5C,EAEA,OAAO,KAGT,GACEY,EAAUJ,EAAK,OAAO,GACtBK,GAASL,EAAK,OAAO,GACrBM,GAAYN,EAAK,OAAO,EACxB,CAiBA,GAfIF,GAAa,SAASE,EAAK,OAAO,IAEpC,OAAOA,EAAK,QAAQ,GACpB,OAAOA,EAAK,QAAQ,SAIlBA,EAAK,SAAS,SAAW,GACzBA,EAAK,SAAS,CAAC,EAAE,OAAS,OAC1BA,EAAK,SAAS,CAAC,EAAE,UAAY,KAC7BA,EAAK,SAAS,CAAC,EAAE,QAAQ,QAAU,kBAEnCA,EAAK,SAAYA,EAAK,SAAS,CAAC,EAAE,SAAS,CAAC,EAAc,WAI5DA,EAAK,UAAY,OACjBhK,EAAWgK,EAAK,QAAQ,MAAO,WAAW,EAC1C,CACA,MAAMO,EAAMP,EAAK,SAAS,KACvBQ,GACCA,EAAU,OAAS,OACnBA,EAAU,UAAY,OACtBxK,EAAWwK,EAAU,QAAQ,MAAO,WAAW,CACnD,EAIED,GACA,CAACN,IAEDD,EAAK,QAAQ,MAAQA,EAAK,QAAQ,MAAM,QACtC,qBACA,EACF,EACAA,EAAK,SAAW,CAACO,CAAG,EAExB,CAGA,OAAIP,EAAK,UAAY,QAAUA,EAAK,UAAY,QAC9C,OAAOA,EAAK,QAAQ,OAAO,EAG7BA,EAAK,SAAWS,EAAYT,EAAK,SAAU,CACzC,KAAAtC,EACA,gBAAAlF,EACA,aAAAyH,CACF,CAAC,EAEMD,CACT,CAGA,OAAIA,EAAK,UAAY,aAAeA,EAAK,UAAY,cACnDA,EAAK,QAAU,IACfA,EAAK,QAAQ,KAAO,GAAGU,GAAkBhD,CAAI,CAAC,GAAGsC,EAAK,QAAQ,EAAE,GAChEA,EAAK,QAAQ,OAAS,SACtB,OAAOA,EAAK,QAAQ,GAGpBA,EAAK,SAAWS,EAAYT,EAAK,SAAU,CACzC,KAAAtC,EACA,gBAAAlF,EACA,aAAAyH,CACF,CAAC,EAEMD,GAILxH,EAAgBwH,EAAK,OAAO,EAAUA,EAGnC,IACT,CAEA,OAAOA,CACT,EAEMS,EAAc,CAClBE,EACA,CAAE,KAAAjD,EAAM,gBAAAlF,EAAiB,aAAAyH,CAAa,IAEtCnK,EAAQ6K,CAAK,EACTA,EACG,IAAKX,GACJD,GAAWC,EAAM,CACf,KAAAtC,EACA,gBAAAlF,EACA,aAAAyH,CACF,CAAC,CACH,EACC,OAAQD,GAA0BA,IAAS,IAAI,EAClD,GAEAY,EAAIC,EAAK,EAAE,EAEXC,GAAWd,GACfA,EAAK,OAAS,OAASA,EAAK,UAAY,KAY7Be,GAAoB,CAC/BC,EACAC,EAAY,kBAEZC,GAAOF,EAAS,CACd,QAAS,GACT,kBAAmBC,CACrB,CAAC,EAAE,QAqEQE,GAAiB,CAC5B,CAAE,SAAAC,EAAU,QAAS,CAAE,KAAA1D,CAAK,CAAE,EAC9B,CAAE,QAAAsD,EAAS,gBAAAK,EAAiB,SAAAC,EAAU,iBAAAC,EAAkB,YAAAC,CAAY,EACpE,CACE,gBAAAhJ,EAAkB,IAAe,GACjC,UAAAyI,EAAY,gBACZ,OAAAQ,EAAS,IACT,cAAAC,EAAgB,GAChB,aAAAzB,EAAe,EACjB,EAAwB,CAAA,IACb,CAEX,MAAM0B,EAAaZ,GAAkBC,EAASC,CAAS,EAEvD,GAAIU,EAAY,CACd,MAAMC,EAAkBR,EAAS,OAC/BO,EAEA,CACE,KAAAjE,EACA,SAAA4D,EACA,iBAAAC,EACA,YAAa,CAAE,GAAGC,CAAY,CAChC,CACF,EAEMK,EAAYD,EAAkBhB,EAAE,UAAUgB,CAAe,EAAI,CAAA,EAEnE,OAAIC,EAAU,CAAC,GAAK,CAACH,GAAiBZ,GAAQe,EAAU,CAAC,CAAC,GACxDA,EAAU,QAELjB,EAAE,KACPH,EAAYoB,EAAW,CACrB,KAAAnE,EACA,gBAAAlF,EACA,aAAAyH,CACF,CAAC,CACH,CACF,CAEA,GAAIwB,EAAS,EAAG,CACd,IAAIK,EAAc,GAElB,MAAMD,EAAYR,EAAkBT,EAAE,UAAUS,CAAe,EAAI,CAAA,EAE/DQ,EAAU,CAAC,GAAK,CAACH,GAAiBZ,GAAQe,EAAU,CAAC,CAAC,GACxDA,EAAU,QAEZ,UAAW7B,MAAQ6B,EAAW,CAC5B,MAAME,EAAehC,GAAWC,GAAM,CACpC,KAAAtC,EACA,gBAAAlF,EACA,aAAAyH,CACF,CAAC,EAED,GAAI8B,IACFD,GAAelB,EAAE,KAAKmB,CAAY,EAC9BD,EAAY,QAAUL,GAAQ,KAEtC,CAEA,OAAOK,CACT,CAEA,MAAO,EACT,EClSME,GAAiB,CAAC,KAAK,EAEvBC,GAAe,CAEnB,QACA,OACA,OACA,WACA,SACA,QACA,SACA,OAGA,MACA,QACA,SAGA,MACA,IAGA,QACA,QACA,SACA,SACA,MACA,OACA,QACA,SAGA,QACA,WACA,SACA,SACA,WACA,UACF,EAOMlC,GAAa,CACjBC,EACA,CAAE,KAAAtC,EAAM,YAAAwE,CAAY,IAEhBlC,EAAK,OAAS,MAGd,CAACA,EAAK,QAAQ,MAAOA,EAAK,QAAQ,EAAE,EAAE,KAAMR,GAC1C,CAAC,oBAAqB,KAAK,EAAE,SAASA,CAAI,CAC5C,EAEO,GAGLwC,GAAe,SAAShC,EAAK,OAAO,EAC/BA,EAAK,QAAQ,KAAO,GAK3B,CAACiC,GAAa,SAASjC,EAAK,OAAO,GACnC,CAACkC,EAAY,SAASlC,EAAK,OAAO,GAClCI,EAAUJ,EAAK,OAAO,EAGfS,GAAYT,EAAK,SAAU,CAAE,KAAAtC,EAAM,YAAAwE,CAAY,CAAC,EAGlD,GAGLlC,EAAK,OAAS,OAAeA,EAAK,KAE/B,GAGHS,GAAc,CAClBE,EACA,CAAE,KAAAjD,EAAM,YAAAwE,CAAY,IAEpBpM,EAAQ6K,CAAK,EACTA,EAAM,IAAKX,GAASD,GAAWC,EAAM,CAAE,KAAAtC,EAAM,YAAAwE,CAAY,CAAC,CAAC,EAAE,KAAK,EAAE,EACpE,GAEAtB,GAAIC,EAAK,EAAE,EAkDJsB,GAAU,CACrBC,EACA1E,EACA,CACE,OAAA+D,EAAS,IACT,WAAAY,EACA,YAAAH,EAAc,CAAC,QAAS,KAAK,CAC/B,EAAqB,CAAA,IACV,CACX,IAAItD,EAAS,GACb,MAAMiD,EAAYO,EAAOxB,GAAE,UAAUwB,CAAI,EAAI,GAE7C,UAAWpC,KAAQ6B,EAAW,CAC5B,MAAMzG,EAAO2E,GAAWC,EAAM,CAAE,KAAAtC,EAAM,YAAAwE,CAAY,CAAC,EAEnD,GAAI9G,IACFwD,GAAUxD,EACNA,EAAK,QAAUqG,GAAQ,KAE/B,CACA,OACEY,EAAazD,EAAO,QAAQ,MAAO,GAAG,EAAE,QAAQ,OAAQ,GAAG,EAAIA,GAC/D,KAAA,CACJ,EAaa0D,GAAc,CACzB,CAAE,QAAS,CAAE,KAAA5E,CAAK,CAAE,EACpB,CACE,gBAAA2D,CAEF,EACAkB,EAA2B,KAChBJ,GAAQd,EAAiB3D,EAAM6E,CAAO"}