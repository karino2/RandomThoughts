import{_ as a,c as n,a as e,o as t}from"./app-CHbCxg9g.js";const i={};function p(l,s){return t(),n("div",null,[...s[0]||(s[0]=[e(`<p>[[技術的なメモ]], [[JavaScript]]</p><p>みんな大好きTypeScript。</p><ul><li><a href="https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html" target="_blank" rel="noopener noreferrer">TypeScript: Documentation - TypeScript for JavaScript Programmers</a></li><li>[[Deno]]</li><li><a href="https://exploringjs.com/tackling-ts/ch_typescript-essentials.html" target="_blank" rel="noopener noreferrer">The essentials of TypeScript • Tackling TypeScript</a> 入門記事</li></ul><p><strong>VSCode 関連</strong></p><ul><li><a href="https://code.visualstudio.com/docs/typescript/typescript-tutorial" target="_blank" rel="noopener noreferrer">TypeScript tutorial with Visual Studio Code</a></li><li><a href="https://code.visualstudio.com/docs/typescript/typescript-debugging" target="_blank" rel="noopener noreferrer">TypeScript debugging with Visual Studio Code</a></li></ul><h2 id="fs-promisesを使ってみる" tabindex="-1"><a class="header-anchor" href="#fs-promisesを使ってみる"><span>fs/promisesを使ってみる</span></a></h2><p>パッケージの使い方が分かればあとはすぐ使えそうだな。 という事でとりあえずfs/promisesを使ってみよう。</p><p>以下を実行するらしい。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">$ npm install -D @types/node</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>ああ、package.jsonが出来てしまった。 とりあえず以下みたいに埋めておこう（generate.tsという名前で作業している）</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">{</span>
<span class="line">  &quot;name&quot;: &quot;gen_sites&quot;,</span>
<span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span>
<span class="line">  &quot;description&quot;: &quot;&quot;,</span>
<span class="line">  &quot;main&quot;: &quot;generate.js&quot;,</span>
<span class="line">  &quot;author&quot;: &quot;&quot;,</span>
<span class="line">  &quot;license&quot;: &quot;ISC&quot;,</span>
<span class="line">  &quot;devDependencies&quot;: {</span>
<span class="line">    &quot;@types/node&quot;: &quot;^20.5.1&quot;</span>
<span class="line">  },</span>
<span class="line">  &quot;scripts&quot;: {</span>
<span class="line">    &quot;build&quot;: &quot;tsc -p .&quot;,</span>
<span class="line">    &quot;start&quot;: &quot;node out/generate.js&quot;</span>
<span class="line">  }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>で、コードを書こうとしたらトップレベルawaitで怒られた。ふむ。 という事でasync関数でくくって呼ぶ事にする。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> fs <span class="token keyword">from</span> <span class="token string">&#39;fs/promises&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> dirs <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span><span class="token string">&quot;./&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dirs<span class="token punctuation">.</span>length<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>動いた。これだけ動けばあとはどうにかなりそうだな。</p>`,14)])])}const c=a(i,[["render",p]]),r=JSON.parse('{"path":"/TypeScript.html","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1741615545000,"contributors":[{"name":"Kazuma Arino","username":"","email":"hogeika2@gmail.com","commits":5}],"changelog":[{"hash":"da9c107f0e21e95a376a93b22de2eb6b71203a58","time":1741615545000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"40fcbbd8fe48acd4fb65da2463f2b54ac3fd4031","time":1703426735000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"adce871968522422664953d1dac2e2e612f8ca88","time":1703311871000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"fbfff5c154b9e17a7c4105b1fdae4217c8896a11","time":1692428729000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"dc0c66222f065a3aa3cc7d3f395568d8f50e5328","time":1692425126000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"}]},"filePathRelative":"TypeScript.md"}');export{c as comp,r as data};
