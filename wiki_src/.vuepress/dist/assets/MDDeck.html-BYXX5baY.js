import{_ as e,c as n,a as s,o as i}from"./app-CHiHTJW6.js";const t={};function r(o,a){return i(),n("div",null,[...a[0]||(a[0]=[s(`<p>[[自作アプリ]]</p><ul><li><a href="https://play.google.com/store/apps/details?id=io.github.karino2.mddeck" target="_blank" rel="noopener noreferrer">MDDeck - Google Play のアプリ</a><ul><li><a href="https://github.com/karino2/MDDeck/tree/main" target="_blank" rel="noopener noreferrer">karino2/MDDeck: MDDeck for android.</a></li></ul></li><li><a href="https://github.com/karino2/MDDeck_Electron" target="_blank" rel="noopener noreferrer">karino2/MDDeck_Electron: MDDeck, Electron version.</a> PC版</li><li><a href="https://karino2.github.io/2024/01/06/mddeck_release.html" target="_blank" rel="noopener noreferrer">MDDeckというアプリを作ってリリースしました！ - なーんだ、ただの水たまりじゃないか</a></li></ul><h2 id="あらすじ" tabindex="-1"><a class="header-anchor" href="#あらすじ"><span>あらすじ</span></a></h2><p>仕事のメモは[[TeFWiki]]を使っているのだが、情報として残したい訳ではないとりあえずのメモでいちいち置く場所とかを考えるのがかったるい。 mdでGitHubのissueみたいに足していけるのが欲しい。</p><p>[[てきすとでっき]]とすごく似ているが、コンフリクトせず、1セル1ファイルのmd。 [[てきすとTL]]のmd版という感じ。</p><p>似たようなアプリ三つも作るのはどうなんだとも思うが、まぁいい。PC版は[[Electron]]で作った。</p><h2 id="仕様" tabindex="-1"><a class="header-anchor" href="#仕様"><span>仕様</span></a></h2><p>[[てきすとTL]]と同じ感じだがmdなところが違うだけ。</p><h2 id="現状と雑感-2024-01-06-土" tabindex="-1"><a class="header-anchor" href="#現状と雑感-2024-01-06-土"><span>現状と雑感 - 2024-01-06 (土)</span></a></h2><p>Electron版、Android版ともに一通り完成してリリース作業を終えた。</p><p>やはりコンフリクトを気にせずに追加出来るのは[[てきすとでっき]]より良いし、 セルの境界がファイルなのも分かりやすい。</p><p>流れていってしまうのがどうなのかは現時点ではまだ分からない。もう少し使い続けて考えたい。</p><h2 id="開発メモ" tabindex="-1"><a class="header-anchor" href="#開発メモ"><span>開発メモ</span></a></h2><p>ビルド周りは[[てきすとでっき]]参照。</p><h2 id="android版メモ" tabindex="-1"><a class="header-anchor" href="#android版メモ"><span>Android版メモ</span></a></h2><ul><li><a href="https://github.com/commonmark/commonmark-java" target="_blank" rel="noopener noreferrer">commonmark/commonmark-java: Java library for parsing and rendering CommonMark (Markdown)</a> JetBrainsの<a href="https://github.com/JetBrains/markdown" target="_blank" rel="noopener noreferrer">JetBrains/markdown: Markdown parser written in kotlin</a>はリストの終わりの処理とかがバグってるのでcommon markに乗り換え</li><li><a href="https://github.com/Qawaz/compose-code-editor" target="_blank" rel="noopener noreferrer">Qawaz/compose-code-editor: Display &amp; Edit code with syntax highlighting in jetpack compose</a></li></ul><p>ドキュメントには2.0.3がAndroid用っぽく見えるが、v3.1.1にもAndroidっぽい対応が入っている。しかもKotlinとかはv2.0.3には入ってないのでこれを使ってみる。</p><p>settings.gradle.ktsに以下のjitpackの行を追加</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">dependencyResolutionManagement <span class="token punctuation">{</span></span>
<span class="line">    repositoriesMode<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>RepositoriesMode<span class="token punctuation">.</span>FAIL_ON_PROJECT_REPOS<span class="token punctuation">)</span></span>
<span class="line">    repositories <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">google</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">maven</span><span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;https://jitpack.io&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>build.gradleに以下を追加</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.github.Qawaz.compose-code-editor:codeeditor-android:v3.1.1&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="古くなった内容" tabindex="-1"><a class="header-anchor" href="#古くなった内容"><span>古くなった内容</span></a></h2><p>最初は[[Deno]]と[[WebUI]]を使っていたがElectronに乗り換えたDenoとWebUIの頃のメモを以下に残しておく。</p><ul><li><a href="https://github.com/karino2/MDDeck_WebUI" target="_blank" rel="noopener noreferrer">karino2/MDDeck_WebUI: MDDeck, desktop version (WebUI and Deno).</a><ul><li><a href="https://github.com/denoland/deno-gfm" target="_blank" rel="noopener noreferrer">GitHub - denoland/deno-gfm: Server-side GitHub Flavored Markdown rendering for Deno</a> task listサポートができないか？</li><li>micromark、いいかも。<a href="https://github.com/micromark/micromark-extension-gfm" target="_blank" rel="noopener noreferrer">GitHub - micromark/micromark-extension-gfm: micromark extension to support GFM (GitHub Flavored Markdown)</a><ul><li>コードハイライトはクライアントサイドでやれとの事 <a href="https://github.com/orgs/micromark/discussions/159" target="_blank" rel="noopener noreferrer">Getting code fence language via custom plugin · micromark · Discussion #159 · GitHub</a></li><li>starry-nightへのリンクが紹介されているがこれでよいかも。 <a href="https://github.com/wooorm/starry-night#example-using-starry-night-on-the-client" target="_blank" rel="noopener noreferrer">GitHub - wooorm/starry-night: Syntax highlighting, like GitHub</a></li></ul></li></ul></li></ul><h3 id="micromark" tabindex="-1"><a class="header-anchor" href="#micromark"><span>micromark</span></a></h3><p>公式READMEにあるように</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">import {micromark} from &#39;https://esm.sh/micromark@3&#39;</span>
<span class="line">import {gfm, gfmHtml} from &#39;https://esm.sh/micromark-extension-gfm@3&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>としたら、Extensionの型がmicromark-util-typesが1.0と2.0が違っていて合わない、と言われる。</p><p>仕方ないのでgfmを2.0.3にしたところ、今度は</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">error: Uncaught ReferenceError: document is not defined</span>
<span class="line">    at https://esm.sh/v135/parse-entities@3.1.0/denonext/decode-entity.js:2:7</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>と言われる。</p><p>結局gfmを3にして型のエラーを無視して実行したら動いた…＞コンパイルで怒られたのでgfmを2に戻した。doucmentどうこうは言われなくなった（なんで？）</p>`,32)])])}const c=e(t,[["render",r]]),p=JSON.parse('{"path":"/MDDeck.html","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1731999951000,"contributors":[{"name":"Kazuma Arino","username":"","email":"hogeika2@gmail.com","commits":14}],"changelog":[{"hash":"3633e62533bd5a2ff1d73517e9508f7d54478bcc","time":1731999951000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"5357de8369574a0d940ffd0362de1e4b5dfc087d","time":1704531940000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"4e0f085bfc232f5110b5dc81b67d3bad2cf2210c","time":1704528335000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"1f368c2c23c0ad094bfbda699f7ef37bb4f70542","time":1704522966000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"06b77cef3ad20f7701421c96fe20327be0fb10ca","time":1704002737000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"ab70934cf7bce2c0ac049d767cfeca9e1fbd0b9c","time":1703837143000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"2dee9d89c8162246427a616a8225bf894834cd45","time":1703779536000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"bb06559024f71e05eb6c1db9b2be4f7da67f299a","time":1703682334000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"fd1100b58647aae298c1962245a116001b3e6363","time":1703657145000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"e625878f41d99d95c3888922da3505862daafefd","time":1703491542000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"6aebc98e5ff810dad0e221b070d4c82025faf2b3","time":1703455727000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"140999928079892a6605fde88d2c39ebaa31a81f","time":1703453197000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"40fcbbd8fe48acd4fb65da2463f2b54ac3fd4031","time":1703426735000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"9990bf0db7ee372bc07b58aca84bd8295d53a1eb","time":1703424143000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"}]},"filePathRelative":"MDDeck.md"}');export{c as comp,p as data};
