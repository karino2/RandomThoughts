import{_ as a,c as i,a as t,o as r}from"./app-CTYZxEMR.js";const s={};function n(l,e){return r(),i("div",null,[...e[0]||(e[0]=[t(`<p>みんな大好きgit。</p><ul><li><a href="./ゆっくり中級git.html">ゆっくり中級git</a> 最近自分が作ってる中級を目指す<a href="./ゆっくり実況.html">ゆっくり実況</a></li></ul><h2 id="外部リンク" tabindex="-1"><a class="header-anchor" href="#外部リンク"><span>外部リンク</span></a></h2><ul><li><a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener noreferrer">Pro Git - Book</a> 公式で配ってるPro Gitという本。日本語は少し古いので英語版を読んでる。epubはたまに記号が壊れているがだいたい読める。だいたい使うのに必要な事がすべて書いてあるので最初から上級者を目指すならこの本読むだけで良い。</li><li><a href="https://github.blog/2022-08-31-gits-database-internals-iii-file-history-queries/" target="_blank" rel="noopener noreferrer">Git&#39;s database internals III: file history queries - The GitHub Blog</a> このIIIに限らず、このシリーズはPro Gitに無い部分の解説があって良い</li><li><a href="https://git-scm.com/docs/index-format" target="_blank" rel="noopener noreferrer">Git - index-format Documentation</a> indexの内部構造。</li><li><a href="https://qiita.com/kzmasa/items/b430bc528d117a7a4493" target="_blank" rel="noopener noreferrer">git rebaseでコミットをまとめたり分割する #Git - Qiita</a> rebase -i。この辺を中級gitの解説では出来るようにしたい。</li></ul><h2 id="レポジトリにあるファイルをローカルで変更するがgit-statusとかには出さない" tabindex="-1"><a class="header-anchor" href="#レポジトリにあるファイルをローカルで変更するがgit-statusとかには出さない"><span>レポジトリにあるファイルをローカルで変更するがgit statusとかには出さない</span></a></h2><p>update-indexでassume-unchangedを指定する。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">$ git update-index --assume-unchanged .vscode/c_cpp_properties.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="cherry-pick用のgit-logコマンド" tabindex="-1"><a class="header-anchor" href="#cherry-pick用のgit-logコマンド"><span>cherry-pick用のgit logコマンド</span></a></h2><p>毎回copilotに聞くのでメモしておく。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">$ git log main --pretty=format:&quot;%h %an %s&quot;</span>
<span class="line">$ git log main --author=karino2 --pretty=format:&quot;%h %an %s&quot;</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cherry-pickで改行コードに違いがある場合" tabindex="-1"><a class="header-anchor" href="#cherry-pickで改行コードに違いがある場合"><span>cherry-pickで改行コードに違いがある場合</span></a></h2><p>諦めてパッチファイルを作ってunix2dosしてgit amするという手順にした。</p><p><a href="https://karino2.github.io/2024/11/23/cherry_pick_between_difference_eol_repo_in_git.html" target="_blank" rel="noopener noreferrer">gitで改行コードが異なるレポジトリ間でチェリーピック的な事をしたい - なーんだ、ただの水たまりじゃないか</a></p><p>なお本来はコンテンツのみをCRLFにするのが正しい。 そこでバイナリファイルとかがあると手作業の修正が必要になる。その場合はvim -bでパッチファイルを開くと末尾のCRを編集出来る。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">vim -b +&#39;set list&#39; mytemp.patch</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>また、amはコンフリクトするとapplyしてくれないので、applyコマンドを直接rejectオプションで呼び出す方が作業はしやすい。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">git apply --reject mytemp.patch</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>駄目だった試行錯誤</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">git cherry-pick -x --strategy-option=renormalize XXXX</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>-xはコミットIDを含める、という奴。</p><p>XXXXはハッシュID。</p><p>内部コードが違う場合、これでは駄目な事が多い。</p><p><strong>駄目だった試行錯誤2</strong></p><p>copilotに聞いたら以下を言われた。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">git add --renormalize xxx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>でxxxファイルの改行コードを直すらしい。 .gitattributesの</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">* text eol=crlf</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>と組み合わせると良いと言うが、試したら駄目だった。</p><h2 id="ci用などに空コミット" tabindex="-1"><a class="header-anchor" href="#ci用などに空コミット"><span>CI用などに空コミット</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">$ git commit --allow-empty -m &quot;CIトラブルのため空コミット&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="headのファイルのハッシュ値を取得" tabindex="-1"><a class="header-anchor" href="#headのファイルのハッシュ値を取得"><span>HEADのファイルのハッシュ値を取得</span></a></h2><p>git rev-parseというコマンドを使う。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">$ git rev-parse HEAD:some_dir/some_file.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="コミットログを表示" tabindex="-1"><a class="header-anchor" href="#コミットログを表示"><span>コミットログを表示</span></a></h2><p>ハッシュ値がXXXの時、</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">$ git log --format=%B -n 1 XXX</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="remotes-origin下の不要なブランチの削除" tabindex="-1"><a class="header-anchor" href="#remotes-origin下の不要なブランチの削除"><span>remotes/origin下の不要なブランチの削除</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">$ git remote prune origin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="ブランチマネージメント" tabindex="-1"><a class="header-anchor" href="#ブランチマネージメント"><span>ブランチマネージメント</span></a></h2><p>とりあえずリンクを貼っておく場所。</p><ul><li><a href="https://trunkbaseddevelopment.com/" target="_blank" rel="noopener noreferrer">Trunkベース: Introduction</a></li></ul><h2 id="gitkのソース" tabindex="-1"><a class="header-anchor" href="#gitkのソース"><span>gitkのソース</span></a></h2><p>gitの一部に入っている模様。tcl/tk（wish）。</p><ul><li><a href="https://github.com/git/git/tree/master/gitk-git" target="_blank" rel="noopener noreferrer">git/gitk-git at master · git/git</a></li></ul><p>ちょっといじりたいと思ったが、なかなか気力がわかないな。 誰か<a href="./WebUI.html">WebUI</a>で同じの作って。</p><h2 id="gitのクライアントいろいろ" tabindex="-1"><a class="header-anchor" href="#gitのクライアントいろいろ"><span>gitのクライアントいろいろ</span></a></h2><ul><li><a href="https://jonas.github.io/tig/" target="_blank" rel="noopener noreferrer">Introduction · Tig - Text-mode interface for Git</a> ncursesのUI。生きていけそうではあるがショートカットとか覚えるのがだるい</li><li><a href="https://www.powershellgallery.com/packages/Tecman.Tfs.Tools/1.1.4.11/Content/Git%5CGit.ps1" target="_blank" rel="noopener noreferrer">PowerShell Gallery - Git/Git.ps1 1.1.4.11</a> powershellでちょっとした事、checkoutとかはこれを参考に自分のを作るのがいいかも。</li></ul><h3 id="lazygit" tabindex="-1"><a class="header-anchor" href="#lazygit"><span>lazygit</span></a></h3><p>コンソール系をいろいろ試した結果、結局これをメインにする事に。</p><p>差分の方をスクロールするのはShift+j, Shift+kでも出来る（何故かヘルプにはpageup, pagedownしか載ってないが）</p><p>リモートのブランチを最初にチェックアウトする場合はcを使う（名前でインクリメンタルフィルタリング）。</p><h3 id="git-guiメモ" tabindex="-1"><a class="header-anchor" href="#git-guiメモ"><span>git-guiメモ</span></a></h3><p>git本家のソースツリーに含まれている、tcl/tkで書かれたgit-gui。ステージングは割と良い。足りない機能を以下にメモしていく。</p><ul><li>全ファイルをステージング</li><li>ファイルのrevert（Hunkのrevertはある）</li><li>リモートのチェックアウト</li></ul><h3 id="tigメモ" tabindex="-1"><a class="header-anchor" href="#tigメモ"><span>tigメモ</span></a></h3><p><a href="https://qiita.com/y-tsutsu/items/98fc75b8814c99619cf4" target="_blank" rel="noopener noreferrer">TigがWindowsにやってきたのでチュートリアルをまとめる #Git - Qiita</a></p><h3 id="gitのターミナルui系いろいろ" tabindex="-1"><a class="header-anchor" href="#gitのターミナルui系いろいろ"><span>gitのターミナルUI系いろいろ</span></a></h3><p>tigがなかなか良いのだが、コミット周りとかも似たようなのが欲しいなぁ、と思いいろいろ他を物色してみる。</p><ul><li>lazygit 少し触ったがどうもなじまなかった＞その後訓練して馴染んできた</li><li>gitui なんか良さそう？</li></ul><p>gitui、なんかリモートのブランチをチェックアウトしようとするとディレクトリが使用中とかいって中途半端にチェックアウトされてしまう（ファイルだけ更新されてHEADが更新されてない感じ？）。</p><p><a href="https://karino2.github.io/2024/11/14/console_git_client.html" target="_blank" rel="noopener noreferrer">コンソールとか小さめのgitクライアントをいろいろ触ってみている - なーんだ、ただの水たまりじゃないか</a></p><h2 id="入門" tabindex="-1"><a class="header-anchor" href="#入門"><span>入門</span></a></h2><p>公式で配ってる<a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener noreferrer">Git - Book</a> Pro Gitという本がとても良く書けているが、 本格的に勉強する用の本なので、入門者に薦めるのはちょっと気がひける。</p><p>入門者にとりあえずこれ見て、というには何がいいだろう？と思い、ググってよさそうだったものを貼っておく。</p><ul><li><a href="https://tech-blog.rakus.co.jp/entry/20200529/git" target="_blank" rel="noopener noreferrer">【超入門】初心者のためのGitとGitHubの使い方 - RAKUS Developers Blog - ラクス エンジニアブログ</a> なかなかちょうど良いかもしれない</li><li><a href="https://learn.microsoft.com/ja-jp/training/paths/intro-to-vc-git/" target="_blank" rel="noopener noreferrer">Git でのバージョン コントロールの概要 - Training - Microsoft Learn</a> 演習形式で進められるのがよさそう。 <ul><li><a href="https://learn.microsoft.com/ja-jp/training/modules/intro-to-git/" target="_blank" rel="noopener noreferrer">Git 入門 - Training - Microsoft Learn</a> ローカルの基本で終わってしまうが、その範囲なら良い</li><li><a href="https://learn.microsoft.com/ja-jp/training/modules/branch-merge-git/" target="_blank" rel="noopener noreferrer">Git でブランチとマージを使用してコードを編集する - Training - Microsoft Learn</a> なかなか良い</li><li><a href="https://learn.microsoft.com/ja-jp/contribute/content/git-github-fundamentals" target="_blank" rel="noopener noreferrer">Git および GitHub の Microsoft Learn ドキュメントの基礎 - Contributor guide - Microsoft Learn</a> リンク集的になかなか良い</li></ul></li><li><a href="https://docs.github.com/ja/get-started/quickstart/hello-world" target="_blank" rel="noopener noreferrer">Hello World - GitHub Docs</a> GitHub中心だがGitHub側の入門には良いかも。</li></ul><p>Microsoft Learnはなかなか良い気がする。</p>`,66)])])}const c=a(s,[["render",n]]),d=JSON.parse('{"path":"/git.html","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1755589121000,"contributors":[{"name":"Kazuma Arino","username":"","email":"hogeika2@gmail.com","commits":26}],"changelog":[{"hash":"49f27b26f7589e7ba3d5cb8dbf5c160cbfd189d5","time":1755589121000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"64a28d02a6d6faeef4f731ff3c7b6404ed5d92fa","time":1743671371000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"1fbaa36183e598afe9cfe7ba6e49d42e1e5cf196","time":1738573535000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"26be98a37d0b8b9bf551583422939873c06f19bc","time":1736327137000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"743d9f6f31ea7b1e2c652d5093c45d81b41a4239","time":1733367945000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"e14fea1321427f8715cc871dffd6ba5aa754ac33","time":1733119545000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"ebfc62886764b97ee40b103abd8965a92db3cdc3","time":1732349146000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"c5aee7d2cd014f6ae360387b0dc59b8c954b1497","time":1732342037000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"e04c7dc2b00a4c72e8ac510b6861ad58494c3443","time":1731996342000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"12ae3bd00b581024623039b8ca42632ff3a08cc1","time":1731992742000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"9fc0bc0ee5be946436bdd722e66eb5f4385beffb","time":1731903683000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"76c1eaa65a632390c999890ec28e1e91c0bcd505","time":1731899147000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"85ae54db7b52981c513989abca58bc970beb6924","time":1731474387000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"a4df7af2d1aa611a30f1c6563e4ff8594ecdc267","time":1731416747000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"e01660a254f4184ee8f553de9d6326d198a3174e","time":1730459135000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"9ab39a1e045b14979420f79cd4738b13c6e2ffe2","time":1729573543000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"152fe389db223e946a744c59588b70600b74ffef","time":1707790908000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"167b8292ebc1ad56fec71058ef88058ee08828bb","time":1707469530000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"c46f4b269cb548ef190a9cc6e404b744b5e6b53a","time":1705993048000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"25a3181de301752dc5b906456b3806d24c4e4038","time":1704942340000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"dea7e5f3b21d2a96c4de7e0918f4cf3b6d08786f","time":1704771316000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"8a2b668d4651a2636672f6cb8f1e3336b0ebba2a","time":1704719131000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"01dba752779ccd7fff3ed4c533afe522a9827f31","time":1704690333000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"5c51c4052d1554ced552868662801a60b711f0ad","time":1701664395000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"8e0d1d26cf770db3d3b01761a06a9f92b58a90eb","time":1669532277000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"9c5f5f4e09b317a21172c50fe1c4c0f0ce740c9b","time":1667617677000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"}]},"filePathRelative":"git.md"}');export{c as comp,d as data};
