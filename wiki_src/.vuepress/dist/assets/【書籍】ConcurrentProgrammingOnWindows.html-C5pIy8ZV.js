import{_ as o,c as n,b as a,a as i,o as r}from"./app-CHbCxg9g.js";const m={};function s(t,e){return r(),n("div",null,[...e[0]||(e[0]=[a("p",null,"[[Windows]]",-1),a("p",null,"Concurrent Programming on Windows",-1),a("iframe",{sandbox:"allow-popups allow-scripts allow-modals allow-forms allow-same-origin",style:{width:"120px",height:"240px"},marginwidth:"0",marginheight:"0",scrolling:"no",frameborder:"0",src:"//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=karino203-22&language=ja_JP&o=9&p=8&l=as4&m=amazon&f=ifr&ref=as_ss_li_til&asins=B0015DYKI4&linkId=08505da632e1b46a3051e86d49b61fc8"},null,-1),i('<h2 id="_2023-10-12-木-購入" tabindex="-1"><a class="header-anchor" href="#_2023-10-12-木-購入"><span>2023-10-12 (木) 購入</span></a></h2><p>仕事で書いたWindowsのThreadPoolを使ったコードがなんかコアを一つしか使ってないように見えるので、 スレッドプール系の本を手元においておきたいな、と思い購入。 2008年の本で古いが、一方でVista世代の解説はあって、ネイティブ側ではこの辺しか使う気は無いのでまぁいいか、という感じに。</p><p>本としては.NETの本という事になっているが、ネイティブの解説は多く、 この時代のスレッドプールとしてはむしろVistaのネイティブの方が良いAPIとうスタンスの解説なので、 ネイティブのスレッドプール周りを知りたい時に悪くない。</p><p>Windowsのこの辺の充実っぷりを理解するのには良いのだけれど、 一方で2008年なのでちょっと古いな、と思う所もある。non blocking futureで統一する、 みたいな所を大前提と出来ない時代なので、その辺がなぁ、という感じだ。</p><h2 id="_2023-10-24-火-memory-models-and-lock-freedomのあたりを読む" tabindex="-1"><a class="header-anchor" href="#_2023-10-24-火-memory-models-and-lock-freedomのあたりを読む"><span>2023-10-24 (火) Memory Models and Lock Freedomのあたりを読む</span></a></h2><p>仕事で使う部分は読みおわったのだけど、Windows特有の並列周りのAPIとか知るには良いと思ったので、10章を読む。 LazyInitが命令の順番が変わってうまく動かないみたいな話とか。 まぁここはそんなにWindows特有の話は無いけれど。基本的な内容でどの本でも同じような話ではあるが、 どの本でも同じような話なのでこの本でもいいな、と思わせる程度には良く書けている。</p><p>ただやっぱりちょっと古いな、と思う。C++の11周りとWIndowsの関連が書いてあるといいのになぁ。thread_localのデストラクタがどうなっているかとか。 なお、.NETの話はいらないなぁ、と思う。なんかこの２つを一つの本に入れるのは失敗なんじゃないかな、と思う。</p><p>読んでいて思うのは、並列の本って並列の問題説明して基本的なコンテナとかの話をして終わり、 みたいなのが多いのだけれど、本当に必要なのは様々な問題でスレッドの同期が必要になってしまう問題をどう無くすか、 みたいなノウハウなんじゃないかなぁ。 少なくとも自分が求めているのはそういうのなんだよなぁ。</p><h2 id="_2023-10-25-水" tabindex="-1"><a class="header-anchor" href="#_2023-10-25-水"><span>2023-10-25 (水)</span></a></h2><p>11章のConcurrency Hazardのあたりは教科書的な内容が書いてあるだけで、避けるプラクティス的な事も言及するとかいいつつほとんどそういうのは無かった（ロックの順番に気をつけましょう的なのしか無い）。後半は飛ばし読みした。 10章の次は12章で良かったなぁ、と思いつつ、12章を読み始める。 12章と13章だけ読んで他の本に行きたい。</p><p>12章を読んでいたが、C#の例ばかりな所が多くて、しかもC++には翻訳出来なさそうなのが多くて自分の用途には合わないのでここらで読むのをやめるかな。 もう少しパラパラ進めるといくつかはC++の例もあったが、簡単なヤツだけでうーん、という感じだ。 なんかオブジェクトをlockに使う例はそのままじゃ実装出来ないよなぁ。</p><p>という事でWindowsの並列プリミティブについては良く書けていると思うけれど、.NETとC++を両方扱うのがC++視点ではいろいろ足りなくていまいち、というのがこの本の印象かな。</p><p>手元に持っておいて並列関連のAPIを調べるのに使う、くらいの用途はちゃんと満たしているので、まぁいいか、という感じはする。 C++は古いがWindowsのAPIはVista以後ではあるのでこのくらいの時期でも自分の用途には十分かな。</p>',13)])])}const l=o(m,[["render",s]]),c=JSON.parse('{"path":"/%E3%80%90%E6%9B%B8%E7%B1%8D%E3%80%91ConcurrentProgrammingOnWindows.html","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1698235532000,"contributors":[{"name":"Kazuma Arino","username":"","email":"hogeika2@gmail.com","commits":5}],"changelog":[{"hash":"34005c2c115eb40165d4b13184b858d36521a858","time":1698235532000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"52c09b576b10cc0c45f28c418aad48a32f02b289","time":1698225140000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"7f6fe2785db2aed5731a9b5910d75919b1f81bd8","time":1698134728000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"10ed8e58ee09e72313f645c627010d26ac558a53","time":1697083533000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"},{"hash":"ecd92f2c34a409e909d7a2784eaa2c212fc24a67","time":1697079939000,"email":"hogeika2@gmail.com","author":"Kazuma Arino","message":"update"}]},"filePathRelative":"【書籍】ConcurrentProgrammingOnWindows.md"}');export{l as comp,c as data};
